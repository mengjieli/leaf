{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../src/main.ts","webpack:///../src/modules/puzzle/component/puzzle-game-debug.ts","webpack:///../src/modules/puzzle/component/puzzle-game-keyboard.ts","webpack:///../src/modules/puzzle/component/puzzle-game-layer.ts","webpack:///../src/modules/puzzle/component/puzzle-game-level.ts","webpack:///../src/modules/puzzle/component/puzzle-game-loop.ts","webpack:///../src/modules/puzzle/component/puzzle-game-object.ts","webpack:///../src/modules/puzzle/component/puzzle-game-result.ts","webpack:///../src/modules/puzzle/component/puzzle-game-ui.ts","webpack:///../src/modules/puzzle/component/puzzle-game.ts","webpack:///../src/modules/puzzle/config/puzzle-game-config.ts","webpack:///../src/modules/puzzle/face/face-scene.ts","webpack:///../src/modules/puzzle/puzzle-scene.ts","webpack:///../src/utils/storage/game-storage.ts","webpack:///../src/utils/ui/module-scene.ts"],"names":[],"mappings":"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EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;gBAC7H,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;gBAC9H,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;gBAC7H,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;gBAC3H,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CA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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"../src/main.ts\");\n","import { FaceScene } from \"./modules/puzzle/face/face-scene\";\nimport { PuzzleScene } from \"./modules/puzzle/puzzle-scene\";\n\nexport class Main {\n\n    constructor() {\n        this.init();\n    }\n\n    async init() {\n        if (window[\"IS_WEB\"]) {\n            try {\n                window[\"require\"] = eval(\"__webpack_require__\");\n                for (let k in window[\"require\"].c) {\n                    window[\"require\"].c[\"../client\" + k.slice(2, k.length)] = window[\"require\"].c[k];\n                }\n            } catch (e) {\n\n            }\n            await orange.startup({\n                native: {\n                    ip: \"localhost\",//\"192.168.0.100\",//(new orange.URLUtil(window.location.href)).params[\"serverIp\"] || \"localhost\",\n                    autoCompile: true\n                }\n            });\n        }\n        leaf.init();\n        leaf.world.root.transform.scaleX = leaf.world.root.transform.scaleY = leaf.GLCore.width / 256;\n        console.error(leaf.GLCore.width, leaf.world.root.transform.scaleX);\n        leaf.Res.loadResources().then(() => {\n            leaf.Res.getRes(\"block_png\").load().then(\n                () => {\n                    new PuzzleScene();\n                    // new FaceScene();\n                }\n            )\n        })\n    }\n\n}\n\nwindow[\"Main\"] = Main;","import { PuzzleGameLevel } from \"./puzzle-game-level\";\nimport { EMPuzzleConst } from \"../config/puzzle-game-config\";\nimport { PuzzleGameLayer } from \"./puzzle-game-layer\";\n\norange.autoloadLink(\"PuzzleScene\");\n\nexport class PuzzleGameDebug extends ecs.Component {\n\n    awake() {\n        return;\n        let level = this.getComponent(PuzzleGameLevel);\n        for (let y = 0; y < level.config.height; y++) {\n            for (let x = 0; x < level.config.width; x++) {\n                ecs.Entity.create().\n                    addComponent(PuzzleGameCoordDebug, x, y,\n                        level.layers[level.config.game.groups[EMPuzzleConst.PLAYER][0].layer]).entity.parent = this.entity;\n            }\n        }\n    }\n\n}\n\nclass PuzzleGameCoordDebug extends ecs.Component {\n\n    x: number;\n    y: number;\n    layer: PuzzleGameLayer;\n\n    init(x: number, y: number, layer: PuzzleGameLayer) {\n        this.x = x;\n        this.y = y;\n        this.entity.transform.x = x * layer.levelConfig.game.blockWidth;\n        this.entity.transform.y = y * layer.levelConfig.game.blockHeight;\n        this.layer = layer;\n        let lb = this.addComponent(leaf.Label);\n        lb.fontSize = 12;\n        lb.fontSize = 12;\n        lb.fontColor = 0xff0000;\n        lb.transform.scaleX = lb.transform.scaleY = 0.1;\n    }\n\n    update() {\n        this.getComponent(leaf.Label).text = this.x + ' ' + this.y + '\\n'\n            + (this.layer.objects[this.y][this.x] ? this.layer.objects[this.y][this.x].id : '') + '\\n';\n    }\n\n\n}","import { PuzzleGameLoop } from \"./puzzle-game-loop\";\nimport { EMPuzzleMove } from \"../config/puzzle-game-config\";\nimport { PuzzleGame } from \"./puzzle-game\";\n\nexport class PuzzleGameKeyBoard extends ecs.Component {\n\n    awake() {\n        window.onkeydown = (e) => {\n            console.error(e.keyCode);\n            if (e.keyCode === 87 || e.keyCode === 38) {\n                this.getComponent(PuzzleGameLoop).run(EMPuzzleMove.UP);\n            } else if (e.keyCode === 83 || e.keyCode === 40) {\n                this.getComponent(PuzzleGameLoop).run(EMPuzzleMove.DOWN);\n            } else if (e.keyCode === 65 || e.keyCode === 37) {\n                this.getComponent(PuzzleGameLoop).run(EMPuzzleMove.LEFT);\n            } else if (e.keyCode === 68 || e.keyCode === 39) {\n                this.getComponent(PuzzleGameLoop).run(EMPuzzleMove.RIGHT);\n            } else if (e.keyCode === 90) {\n                this.getComponent(PuzzleGameLoop).back();\n            } else if (e.keyCode === 82) {\n                this.getComponent(PuzzleGame).reload();\n            }\n        }\n    }\n\n}","import { PuzzleGameObject } from \"./puzzle-game-object\";\nimport { PuzzleGameConfig, PuzzleGameLevelConfig, PuzzleGameObjectConfig } from \"../config/puzzle-game-config\";\n\norange.autoloadLink(\"PuzzleScene\");\n\nexport class PuzzleGameLayer extends ecs.Component {\n\n    levelConfig: PuzzleGameLevelConfig;\n\n    objects: PuzzleGameObject[][] = [];\n\n    isStatic: boolean;\n\n    layerIndex: number;\n\n    ruleObjects: PuzzleGameObject[] = [];\n\n    init(levelConfig: PuzzleGameLevelConfig, cfg: PuzzleGameObjectConfig[][], layerIndex: number) {\n        this.levelConfig = levelConfig;\n        this.isStatic = true;\n        this.layerIndex = layerIndex;\n        for (let y = 0; y < levelConfig.height; y++) {\n            this.objects[y] = [];\n            for (let x = 0; x < levelConfig.width; x++) {\n                this.objects[y][x] = null;\n                if (!cfg) continue;\n                let objCfg = cfg[y] && cfg[y][x];\n                if (!objCfg) {\n                    if (layerIndex === 0) {\n                        if (levelConfig.game.objects[\"background\"]) {\n                            ecs.Entity.create().addComponent(PuzzleGameObject, this, levelConfig.game.objects[\"background\"], x, y);\n                        }\n                    }\n                } else {\n                    if (levelConfig.game.ruleObjects.indexOf(objCfg) != -1) this.isStatic = false;\n                    ecs.Entity.create().addComponent(PuzzleGameObject, this, objCfg, x, y);\n                }\n            }\n        }\n        if (this.isStatic) {\n            // this.addComponent(leaf.BatchRender);\n        }\n    }\n\n    getObjectByType(type: PuzzleGameObjectConfig): PuzzleGameObject {\n        for (let obj of this.ruleObjects) {\n            if (obj.config === type) return obj;\n        }\n    }\n\n    getObjectsByType(type: PuzzleGameObjectConfig): PuzzleGameObject[] {\n        let list = [];\n        for (let obj of this.ruleObjects) {\n            if (obj.config === type) list.push(obj);\n        }\n        return list;\n    }\n}","import { PuzzleGameLevelConfig, PuzzleGameConfig, PuzzleGameObjectConfig } from \"../config/puzzle-game-config\";\nimport { PuzzleGameLayer } from \"./puzzle-game-layer\";\nimport { PuzzleGameObject } from \"./puzzle-game-object\";\nimport { PuzzleGameLoop } from \"./puzzle-game-loop\";\nimport { PuzzleGameDebug } from \"./puzzle-game-debug\";\nimport { PuzzleGame } from \"./puzzle-game\";\n\norange.autoloadLink(\"PuzzleScene\");\n\nexport class PuzzleGameLevel extends ecs.Component {\n\n    config: PuzzleGameLevelConfig;\n\n    layers: PuzzleGameLayer[] = [];\n\n    state: 'win' | 'lose' | 'game'\n\n    init(cfg: PuzzleGameLevelConfig) {\n        let game = this.getComponent(PuzzleGame);\n        this.state = 'game';\n        this.config = cfg;\n        let layerIndex = 0;\n        let width = (this.config.width * this.config.game.blockWidth);\n        let height = (this.config.height * this.config.game.blockHeight);\n        let maxWidth = leaf.getStageWidth();\n        let maxHeight = leaf.getStageHeight() - this.transform.y - 200;\n        if (!game.scaleToStage) {\n            maxWidth = game.maxWidth;\n            maxHeight = game.maxHeight;\n        } else {\n            this.transform.y = 60;\n        }\n        let scaleWidth = maxWidth / width;\n        let maxScaleY = maxHeight / height;\n        scaleWidth = Math.min(scaleWidth, maxScaleY);\n        if (this.getComponent(PuzzleGame).scaleToStage) {\n            this.transform.y = (maxHeight - height * scaleWidth) / 2 + 60;\n            this.transform.x = (maxWidth - width * scaleWidth) / 2;\n        }\n        this.transform.scaleX = this.transform.scaleY = scaleWidth;\n\n        for (let layerCfg of cfg.layers) {\n            let layer = ecs.Entity.create().addComponent(PuzzleGameLayer, this.config, layerCfg, layerIndex++);\n            layer.parent = this.entity;\n            this.layers.push(layer);\n        }\n        this.addComponent(PuzzleGameLoop);\n        this.addComponent(PuzzleGameDebug);\n        window[\"level\"] = this;\n    }\n\n    getObjectByType(type: PuzzleGameObjectConfig): PuzzleGameObject {\n        for (let layer of this.layers) {\n            for (let obj of layer.ruleObjects) {\n                if (obj.config === type) return obj;\n            }\n        }\n    }\n\n    getObjectsByType(type: PuzzleGameObjectConfig): PuzzleGameObject[] {\n        let list = [];\n        for (let layer of this.layers) {\n            for (let obj of layer.ruleObjects) {\n                if (obj.config === type) list.push(obj);\n            }\n        }\n        return list;\n    }\n}","import { EMPuzzleMove, EMPuzzleForce, EMPuzzleConst, EMPuzzleConditionLimit, PuzzleGameObjectConfig, PuzzleGameConfig } from \"../config/puzzle-game-config\";\nimport { PuzzleGame } from \"./puzzle-game\";\nimport { PuzzleGameLevel } from \"./puzzle-game-level\";\nimport { PuzzleGameObject } from \"./puzzle-game-object\";\nimport { PuzzleGameResult } from \"./puzzle-game-result\";\n\norange.autoloadLink(\"PuzzleScene\");\n\nexport class PuzzleGameLoop extends ecs.Component {\n\n    awake() {\n        setTimeout(() => {\n            // this.run(EMPuzzleMove.RIGHT);\n        }, 1000);\n    }\n\n    shortCuts: GameShortCut[] = [];\n\n    createShortCut() {\n        let sc = new GameShortCut();\n        sc.layers = [];\n        let level = this.getComponent(PuzzleGameLevel);\n        for (let i = 0; i < level.layers.length; i++) {\n            let layer = new GameShortCutLayer();\n            layer.layer = i;\n            layer.objects = level.config.blocks;\n            layer.types = {};\n            if (level.config.game.ruleLayers[i]) {\n                layer.objects = [];\n                for (let y = 0; y < level.config.height; y++) {\n                    layer.objects[y] = [];\n                    for (let x = 0; x < level.config.width; x++) {\n                        let obj = level.layers[layer.layer].objects[y][x];\n                        layer.objects[y][x] = obj ? { config: obj.config, x, y } : null;\n                        if (obj) {\n                            if (!layer.types[obj.config.id]) layer.types[obj.config.id] = [];\n                            layer.types[obj.config.id].push(layer.objects[y][x]);\n                        }\n                    }\n                }\n            }\n            sc.layers[layer.layer] = layer;\n        }\n        this.shortCuts.push(sc);\n        return sc;\n    }\n\n    /**\n     * 运行一次\n     * 后面的运动会把前面的运动覆盖，即先还原位置，再进行相应的移动，\n     * 但如果某一次运动失败，会还原位置，前面的移动也相当于失效\n        [ MOVING Player |  Crate ] -> [ MOVING Player | MOVING Crate ]\n        [ Crate ] -> [ right Crate ]\n     * ... 表示中间相隔任意远都可\n     * [ > Player | ... | Crate ] -> [ | ... | Player ]\n     * \n     * 方位限定强于任意远，即有方位时，任意远是受限制的，即不生效\n     * right [ Player | ... |  Crate ] -> [ down Player | ... | down Crate ]\n     * \n     */\n    run(move: EMPuzzleMove) {\n        let shortCut = this.createShortCut();\n        let level = this.getComponent(PuzzleGameLevel);\n        if (level.state === 'win' || level.state === 'lose') return;\n        let gameConfig = this.getComponent(PuzzleGame).config;\n        let moveOffset: { x: number, y: number } = this.moveOffset[move];\n        //记录移动过的元素初始位置\n        let changedObjects: { [index: number]: PuzzleGameObject } = {};\n        let changeObjecteSource: { [index: number]: { x: number, y: number } } = {};\n        for (let rule of gameConfig.rules) {\n            if (!rule.ranks.length || !rule.ranks[0].length || !rule.ranks[0][0].length || !rule.ranks[0][0][0].length) continue;\n            let ruleExecuteOK = true;\n            while (ruleExecuteOK) {\n                ruleExecuteOK = false;\n                for (let overlapObjCfg of rule.ranks[0][0]) {\n                    for (let objCfg of overlapObjCfg) {\n                        let objs: { x: number, y: number, config: PuzzleGameObjectConfig }[];\n                        if (objCfg.isPlayer) {\n                            objs = shortCut.layers[objCfg.layer] ? shortCut.layers[objCfg.layer].types[objCfg.id] : null;\n                        } else {\n                            objs = level.getObjectsByType(objCfg);\n                        }\n                        if (!objs) continue;\n                        for (let obj of objs) {\n                            let startX = obj.x;\n                            let startY = obj.y;\n                            let offsets = this.forceMoveOffsets[rule.force][move];\n                            let successfull = false;\n                            for (let offset of offsets) {\n                                if (rule.directions && rule.directions.length && rule.directions.indexOf(offset.dir) === -1) continue;\n                                //开始匹配某个方向是否符合规则\n                                let flag = true;\n                                let anyPosistion = false;\n                                for (let m = 0; m < rule.ranks.length; m++) {\n                                    //计算 [> p k | c][ m ]\n                                    for (let n = 0; n < rule.ranks[m].length; n++) {\n                                        //计算 > p k | c\n                                        let x = startX + offset.x * n;\n                                        let y = startY + offset.y * n;\n                                        if (!rule.ranks[m][n]) {\n                                            anyPosistion = true;\n                                        } else {\n                                            for (let o = !m && !n && successfull ? 1 : 0; o < rule.ranks[m][n].length; o++) {\n                                                if (!rule.ranks[m][n][o].length) continue;\n                                                let levelInstance = rule.ranks[m][n][o][0].isPlayer && rule.isPlayerMoved ? shortCut : level;\n                                                if (rule.limits[m][n][o] === EMPuzzleConditionLimit.NO) {\n                                                    let find = false;\n                                                    //计算 p k 是否符合规则\n                                                    for (let layer of levelInstance.layers) {\n                                                        let check = layer.objects[y][x];\n                                                        if (check && rule.ranks[m][n][o].indexOf(check.config) != -1) {\n                                                            find = true;\n                                                            break;\n                                                        }\n                                                    }\n                                                    if (find) {\n                                                        flag = false;\n                                                    }\n                                                } else {\n                                                    let find = false;\n                                                    //计算 p k 是否符合规则\n                                                    for (let layer of levelInstance.layers) {\n                                                        let check = layer.objects[y][x];\n                                                        if (check && rule.ranks[m][n][o].indexOf(check.config) != -1) {\n                                                            find = true;\n                                                            break;\n                                                        }\n                                                    }\n                                                    if (!find) {\n                                                        flag = false;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        if (!flag) break;\n                                    }\n                                    if (!flag) break;\n                                }\n                                if (flag) { //成功了，开始执行\n                                    if (rule.force === EMPuzzleForce.NONE && rule.ranks[0] && rule.ranks[0][0] && rule.ranks[0][0].length > 1) {\n                                        ruleExecuteOK = true;\n                                    }\n                                    let deleteConfigs: PuzzleGameObjectConfig[] = [];\n                                    let deleteObjects: PuzzleGameObjectConfig[][][] = [];\n                                    anyPosistion = false;\n                                    for (let m = 0; m < rule.ranks.length; m++) {\n                                        deleteObjects[m] = [];\n                                        for (let n = 0; n < rule.ranks[m].length; n++) {\n                                            //计算 > p k | c\n                                            let x = startX + offset.x * n;\n                                            let y = startY + offset.y * n;\n                                            deleteObjects[m][n] = [];\n                                            if (!rule.ranks[m][n]) {\n                                                anyPosistion = true;\n                                            } else {\n                                                for (let o = !m && !n && successfull ? 1 : 0; o < rule.ranks[m][n].length; o++) {\n                                                    //计算 p k \n                                                    for (let layer of level.layers) {\n                                                        let check = layer.objects[y][x];\n                                                        if (check && rule.ranks[m][n][o].indexOf(check.config) != -1) {\n                                                            //找到了，删除对象\n                                                            if (changedObjects[(x + y * level.config.width) * 1000 + check.config.layer]) {\n                                                                changedObjects[(x + y * level.config.width) * 1000 + check.config.layer] = null;\n                                                            }\n                                                            deleteObjects[m][n][o] = check.config;\n                                                            if (deleteConfigs.indexOf(check.config) === -1) {\n                                                                deleteConfigs.push(check.config);\n                                                            }\n                                                            check.removeFromLayer();\n                                                            check.entity.destroy();\n                                                            break;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    anyPosistion = false;\n                                    for (let m = 0; m < rule.toRanks.length; m++) {\n                                        for (let n = 0; n < rule.toRanks[m].length; n++) {\n                                            //计算 > p k | c\n                                            let x = startX + offset.x * n;\n                                            let y = startY + offset.y * n;\n                                            if (!rule.toRanks[m][n]) {\n                                                anyPosistion = true;\n                                            } else {\n                                                for (let o = !m && !n && successfull ? 1 : 0; o < rule.toRanks[m][n].length; o++) {\n                                                    if (rule.toLimits[m][n][o] === EMPuzzleConditionLimit.NO) continue;\n                                                    //计算 p k \n                                                    //生成对象\n                                                    //1. 优先查找原先位置是否和现在位置的属性相符，如果相符就生成这个\n                                                    //2. 查找其他位置的元素是否有相符的，有就生成\n                                                    //3. 使用组里第一个\n\n                                                    //如果是空表示删除对象\n                                                    if (!rule.toRanks[m][n][o]) continue;\n                                                    let toRankConfigs = rule.toRanks[m][n][o];\n                                                    // if (rule.ranks[m][n] && rule.ranks[m][n][o]) {\n                                                    //     let isPlayer = false;\n                                                    //     for (let ck of rule.ranks[m][n][o]) {\n                                                    //         if (ck.isPlayer) {\n                                                    //             isPlayer = true;\n                                                    //             break;\n                                                    //         }\n                                                    //     }\n                                                    //     if (isPlayer) continue;\n                                                    // }\n                                                    let newObjCfg: PuzzleGameObjectConfig;\n                                                    if (toRankConfigs.indexOf(deleteObjects[m][n][o]) != -1) {\n                                                        newObjCfg = deleteObjects[m][n][o];\n                                                    }\n                                                    if (!newObjCfg) {\n                                                        for (let checkDeleteCfg of deleteConfigs) {\n                                                            if (toRankConfigs.indexOf(checkDeleteCfg) != -1) {\n                                                                newObjCfg = checkDeleteCfg;\n                                                                break;\n                                                            }\n                                                        }\n                                                    }\n                                                    if (!newObjCfg) {\n                                                        newObjCfg = toRankConfigs[0];\n                                                    }\n                                                    let posIndex = (x + y * level.config.width) * 1000 + newObjCfg.layer;\n                                                    //这个位置的元素生成过就删除掉\n                                                    if (changedObjects[posIndex]) {\n                                                        changedObjects[posIndex].removeFromLayer();\n                                                        changedObjects[posIndex].entity.destroy();\n                                                    }\n                                                    let toX = x;\n                                                    let toY = y;\n                                                    let toFroce = rule.toForces[m][n][o];\n                                                    if (toFroce === null) {\n                                                    } else if (toFroce === EMPuzzleForce.PUSH || toFroce === EMPuzzleForce.MOVING) { //推\n                                                        toX += moveOffset.x;\n                                                        toY += moveOffset.y;\n                                                    } else if (toFroce === EMPuzzleForce.PULL) { //拉\n                                                        toX -= moveOffset.x;\n                                                        toY -= moveOffset.y;\n                                                    } else if (toFroce === EMPuzzleForce.RIGHT) {\n                                                        toX++;\n                                                    } else if (toFroce === EMPuzzleForce.LEFT) {\n                                                        toX--;\n                                                    } else if (toFroce === EMPuzzleForce.UP) {\n                                                        toY--;\n                                                    } else if (toFroce === EMPuzzleForce.DOWN) {\n                                                        toY++;\n                                                    }\n                                                    if (toX < 0 || toX >= level.config.width || toY < 0 || toY >= level.config.height) {\n                                                        toX = x;\n                                                        toY = y;\n                                                    } else if (level.layers[newObjCfg.layer].objects[toY][toX]) {  //要移动的位置有东西了\n                                                        toX = x;\n                                                        toY = y;\n                                                    }\n                                                    //原来的位置也有对象，即开始递归还原\n                                                    if (level.layers[newObjCfg.layer].objects[toY][toX]) {\n                                                        let list = [level.layers[newObjCfg.layer].objects[toY][toX]];\n                                                        while (true) {\n                                                            let hasNew = false;\n                                                            for (let check of list) {\n                                                                let checkSource = changeObjecteSource[check.id];\n                                                                let sourceObject = level.layers[check.config.layer].objects[checkSource.y][checkSource.x];\n                                                                if (sourceObject && sourceObject != check && list.indexOf(sourceObject) === -1) {\n                                                                    list.push(sourceObject);\n                                                                    hasNew = true;\n                                                                }\n                                                            }\n                                                            if (!hasNew) break;\n                                                        }\n                                                        //把列表上的元素全部移除\n                                                        for (let check of list) {\n                                                            check.removeFromLayer();\n                                                        }\n                                                        //全部还原\n                                                        for (let check of list) {\n                                                            check.setCoord(changeObjecteSource[check.id].x, changeObjecteSource[check.id].y);\n                                                            check.addToLayer();\n                                                        }\n                                                    }\n                                                    //开始移动\n                                                    changedObjects[posIndex] = ecs.Entity.create().addComponent(PuzzleGameObject, level.layers[newObjCfg.layer], newObjCfg, toX, toY);\n                                                    changeObjecteSource[changedObjects[posIndex].id] = { x, y };\n                                                }\n                                            }\n                                        }\n                                    }\n                                    successfull = true;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.checkState();\n    }\n\n    back() {\n        let level = this.getComponent(PuzzleGameLevel);\n        if (this.shortCuts.length) {\n            let shortCut = this.shortCuts.pop();\n            for (let layer of shortCut.layers) {\n                if (!level.config.game.ruleLayers[layer.layer]) continue;\n                let realLayer = level.layers[layer.layer];\n                for (let y = 0; y < level.config.height; y++) {\n                    for (let x = 0; x < level.config.width; x++) {\n                        let obj = realLayer.objects[y][x];\n                        if (obj) {\n                            obj.removeFromLayer();\n                            obj.entity.destroy();\n                        }\n                    }\n                }\n                for (let y = 0; y < level.config.height; y++) {\n                    for (let x = 0; x < level.config.width; x++) {\n                        let obj = layer.objects[y][x];\n                        if (obj) {\n                            ecs.Entity.create().addComponent(PuzzleGameObject, realLayer, obj.config, x, y);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    checkState() {\n        let level = this.getComponent(PuzzleGameLevel);\n        let win = true;\n        for (let item of level.config.game.winConditions) {\n            if (item.limit === EMPuzzleConditionLimit.NO) {\n                for (let type of item.master) {\n                    if (level.layers[type.layer].getObjectByType(type)) {\n                        win = false;\n                        break;\n                    }\n                }\n            } else if (item.limit === EMPuzzleConditionLimit.ALL) {\n                for (let type of item.master) {\n                    let masters = level.layers[type.layer].getObjectsByType(type);\n                    for (let master of masters) {\n                        let has = false;\n                        for (let layer of level.layers) {\n                            if (layer.objects[master.y][master.x] && item.other.indexOf(layer.objects[master.y][master.x].config) != -1) {\n                                has = true;\n                                break;\n                            }\n                        }\n                        if (!has) {\n                            win = false;\n                            break;\n                        }\n                    }\n                    if (!win) break;\n                }\n            } else if (item.limit === EMPuzzleConditionLimit.SOME) {\n                let has = false;\n                for (let type of item.master) {\n                    let masters = level.layers[type.layer].getObjectsByType(type);\n                    for (let master of masters) {\n                        for (let layer of level.layers) {\n                            if (layer.objects[master.y][master.x] && item.other.indexOf(layer.objects[master.y][master.x].config) != -1) {\n                                has = true;\n                                break;\n                            }\n                        }\n                        if (has) break;\n                    }\n                }\n                if (!has) win = false;\n            }\n            if (!win) break;\n        }\n        if (win) {\n            level.state = 'win';\n            console.error('恭喜过关');\n            this.getComponent(PuzzleGame).ui.addComponent(PuzzleGameResult, this.getComponent(PuzzleGame));\n        }\n    }\n\n    moveOffset = {\n        'none': { x: 0, y: 0 },\n        'right': { x: 1, y: 0 },\n        'left': { x: -1, y: 0 },\n        'up': { x: 0, y: -1 },\n        'down': { x: 0, y: 1 }\n    };\n\n    forceMoveOffsets = {\n        'none': {\n            'none': [{ x: 1, y: 0, dir: 'right' }, { x: -1, y: 0, dir: 'left' }, { x: 0, y: -1, dir: 'up' }, { x: 0, y: 1, dir: 'down' }],\n            'right': [{ x: 1, y: 0, dir: 'right' }, { x: -1, y: 0, dir: 'left' }, { x: 0, y: -1, dir: 'up' }, { x: 0, y: 1, dir: 'down' }],\n            'left': [{ x: 1, y: 0, dir: 'right' }, { x: -1, y: 0, dir: 'left' }, { x: 0, y: -1, dir: 'up' }, { x: 0, y: 1, dir: 'down' }],\n            'up': [{ x: 1, y: 0, dir: 'right' }, { x: -1, y: 0, dir: 'left' }, { x: 0, y: -1, dir: 'up' }, { x: 0, y: 1, dir: 'down' }],\n            'down': [{ x: 1, y: 0, dir: 'right' }, { x: -1, y: 0, dir: 'left' }, { x: 0, y: -1, dir: 'up' }, { x: 0, y: 1, dir: 'down' }]\n        },\n        '>': {\n            'none': [],\n            'right': [{ x: 1, y: 0, dir: 'right' }],\n            'left': [{ x: -1, y: 0, dir: 'left' }],\n            'up': [{ x: 0, y: -1, dir: 'up' }],\n            'down': [{ x: 0, y: 1, dir: 'down' }]\n        },\n        '<': {\n            'none': [],\n            'right': [{ x: -1, y: 0, dir: 'left' }],\n            'left': [{ x: 1, y: 0, dir: 'right' }],\n            'up': [{ x: 0, y: 1, dir: 'down' }],\n            'down': [{ x: 0, y: -1, dir: 'up' }]\n        },\n        'right': {\n            'none': [],\n            'right': [{ x: 1, y: 0, dir: 'right' }, { x: -1, y: 0, dir: 'left' }, { x: 0, y: -1, dir: 'up' }, { x: 0, y: 1, dir: 'down' }],\n            'left': [],\n            'up': [],\n            'down': []\n        },\n        'left': {\n            'none': [],\n            'right': [],\n            'left': [{ x: 1, y: 0, dir: 'right' }, { x: -1, y: 0, dir: 'left' }, { x: 0, y: -1, dir: 'up' }, { x: 0, y: 1, dir: 'down' }],\n            'up': [],\n            'down': []\n        },\n        'up': {\n            'none': [],\n            'right': [],\n            'left': [],\n            'up': [{ x: 1, y: 0, dir: 'right' }, { x: -1, y: 0, dir: 'left' }, { x: 0, y: -1, dir: 'up' }, { x: 0, y: 1, dir: 'down' }],\n            'down': []\n        },\n        'down': {\n            'none': [],\n            'right': [],\n            'left': [],\n            'up': [],\n            'down': [{ x: 1, y: 0, dir: 'right' }, { x: -1, y: 0, dir: 'left' }, { x: 0, y: -1, dir: 'up' }, { x: 0, y: 1, dir: 'down' }]\n        },\n        'moving': {\n            'none': [],\n            'right': [{ x: 1, y: 0, dir: 'right' }, { x: -1, y: 0, dir: 'left' }, { x: 0, y: -1, dir: 'up' }, { x: 0, y: 1, dir: 'down' }],\n            'left': [{ x: 1, y: 0, dir: 'right' }, { x: -1, y: 0, dir: 'left' }, { x: 0, y: -1, dir: 'up' }, { x: 0, y: 1, dir: 'down' }],\n            'up': [{ x: 1, y: 0, dir: 'right' }, { x: -1, y: 0, dir: 'left' }, { x: 0, y: -1, dir: 'up' }, { x: 0, y: 1, dir: 'down' }],\n            'down': [{ x: 1, y: 0, dir: 'right' }, { x: -1, y: 0, dir: 'left' }, { x: 0, y: -1, dir: 'up' }, { x: 0, y: 1, dir: 'down' }]\n        }\n    };\n\n}\n\n\nclass GameShortCut {\n    layers: GameShortCutLayer[];\n}\n\nclass GameShortCutLayer {\n    layer: number;\n    objects: { x: number, y: number, config: PuzzleGameObjectConfig }[][];\n    types: { [index: number]: { x: number, y: number, config: PuzzleGameObjectConfig }[] };\n}","import { PuzzleGameObjectConfig } from \"../config/puzzle-game-config\";\nimport { PuzzleGameLayer } from \"./puzzle-game-layer\";\n\norange.autoloadLink(\"PuzzleScene\");\n\nexport class PuzzleGameObject extends ecs.Component {\n\n    config: PuzzleGameObjectConfig;\n\n    layer: PuzzleGameLayer;\n\n    private _x: number;\n\n    get x() { return this._x; }\n\n    private _y: number;\n\n    get y() { return this._y; }\n\n    isInLayer: boolean;\n\n    init(layer: PuzzleGameLayer, config: PuzzleGameObjectConfig, x: number = null, y: number = null) {\n        this.config = config;\n        this.layer = layer;\n        this._x = x;\n        this._y = y;\n        this.createShow();\n        this.setCoord(x, y);\n        this.addToLayer();\n        this.entity.parent = this.layer.entity;\n        if (this.config.game.ruleObjects.indexOf(this.config) != -1) {\n            layer.ruleObjects.push(this);\n        }\n    }\n\n    removeFromLayer() {\n        this.isInLayer = false;\n        this.layer.objects[this.y][this.x] = null;\n    }\n\n    addToLayer(): boolean {\n        if (this.x < 0 || this.x >= this.layer.levelConfig.width ||\n            this.y < 0 || this.y >= this.layer.levelConfig.height ||\n            this.layer.objects[this.y][this.x] && this.layer.objects[this.y][this.x] != this) {\n            return false;\n        }\n        this.isInLayer = true;\n        this.layer.objects[this.y][this.x] = this;\n        return true;\n    }\n\n    setCoord(x: number, y: number): boolean {\n        if (this.isInLayer && this.layer.objects[y][x] && this.layer.objects[y][x] != this) {\n            return false;\n        }\n        if (this.isInLayer && this.layer.objects[this.y][this.x] !== this) {\n            console.error('出错叻!?')\n            return false;\n        }\n        this.layer.objects[this.y][this.x] = null;\n        this._x = x;\n        this._y = y;\n        if (this.isInLayer) {\n            if (!this.layer.objects[y]) this.layer.objects[y] = [];\n            this.layer.objects[y][x] = this;\n        }\n        this.transform.x = x * this.config.game.blockWidth;\n        this.transform.y = y * this.config.game.blockHeight;\n        return true;\n    }\n\n    createShow() {\n        this.addComponent(leaf.Bitmap).texture = leaf.RectTexture.getTexture(this.config.blocks, this.config.colorId);\n    }\n\n    onDestroy() {\n        this.layer.objects[this.y][this.x] = null;\n        if (this.layer.ruleObjects.indexOf(this) != -1) {\n            this.layer.ruleObjects.splice(this.layer.ruleObjects.indexOf(this), 1);\n        }\n        this.layer = null;\n        this.config = null;\n    }\n\n}","import { PuzzleGame } from \"./puzzle-game\";\nimport { GameStorage } from \"../../../utils/storage/game-storage\";\nimport { PuzzleGameLevel } from \"./puzzle-game-level\";\nimport { FaceScene } from \"../face/face-scene\";\n\norange.autoloadLink(\"PuzzleScene\");\n\nexport class PuzzleGameResult extends ecs.Component {\n\n    init(game: PuzzleGame) {\n        let lv = game.level;\n        if (game.getComponent(PuzzleGameLevel).state === 'win') {\n            GameStorage.getStorage(`${game.gameName}_maxStage`).then(v => {\n                console.error(\"lv:\", v, lv);\n                if (+v < lv) {\n                    console.error(\"保存关卡进度\", lv);\n                    GameStorage.setStorage(`${game.gameName}_maxStage`, lv);\n                }\n            })\n        }\n        setTimeout(() => {\n            let entity = ecs.Entity.create();\n            entity.parent = this.entity;\n            entity.addComponent(leaf.Bitmap).texture = leaf.PointTexture.getTexture(0);\n            entity.transform.scaleX = leaf.getStageWidth();\n            entity.transform.scaleY = leaf.getStageHeight();\n            entity.transform.alpha = 0.8;\n\n            let label = ecs.Entity.create().addComponent(leaf.Label);\n            label.text = lv >= game.config.levels.length ? '恭喜你已通关' : '你真棒!';\n            label.fontSize = 20;\n            label.parent = this.entity;\n            label.transform.alpha = 0;\n            setTimeout(() => {\n                label.transform.alpha = 1;\n                label.transform.x = (leaf.getStageWidth() - label.width) / 2;\n                label.transform.y = (leaf.getStageHeight() - label.height) / 2;\n            }, 100);\n            setTimeout(() => {\n                if (lv >= game.config.levels.length) {\n                    new FaceScene();\n                } else {\n                    game.loadNextStage();\n                }\n            }, 1000);\n        }, 500);\n    }\n\n}","import { PuzzleGameLoop } from \"./puzzle-game-loop\";\nimport { EMPuzzleMove } from \"../config/puzzle-game-config\";\nimport { PuzzleGame } from \"./puzzle-game\";\nimport { PuzzleGameResult } from \"./puzzle-game-result\";\n\norange.autoloadLink(\"PuzzleScene\");\n\nexport class PuzzleGameUI extends ecs.Component {\n\n    uiRoot: ecs.Entity;\n\n    game: PuzzleGame;\n\n    init(game: PuzzleGame) {\n        this.game = game;\n    }\n\n    awake() {\n        this.uiRoot = ecs.Entity.create();\n        this.uiRoot.parent = this.entity;\n\n        // let upBtn = [\n        //     [0]\n        // ]\n        let dirGroup = ecs.Entity.create();\n        dirGroup.parent = this.uiRoot;\n        let arrGroup = ecs.Entity.create();\n        arrGroup.parent = dirGroup;\n\n\n        let upBtn = ecs.Entity.create().addComponent(leaf.Bitmap);\n        upBtn.texture = leaf.RectTexture.getTexture(leaf.RectTexture.formatColors(\n            `${0xffffff},${0xaa0000}\\n` +\n            '...0...\\n' +\n            '..000..\\n' +\n            '.00000.\\n' +\n            '0..0..0\\n' +\n            '...0...\\n' +\n            '...0...\\n' +\n            '...0...'\n        ));\n        upBtn.transform.x = 9;\n        upBtn.parent = arrGroup;\n\n        let rightBtn = ecs.Entity.create().addComponent(leaf.Bitmap);\n        rightBtn.texture = leaf.RectTexture.getTexture(leaf.RectTexture.formatColors(\n            `${0xffffff},${0xaa0000}\\n` +\n            '...0...\\n' +\n            '..0....\\n' +\n            '.00....\\n' +\n            '0000000\\n' +\n            '.00....\\n' +\n            '..0....\\n' +\n            '...0...\\n'\n        ));\n        rightBtn.transform.angle = Math.PI * 180 / 180;\n        rightBtn.transform.x = 25;\n        rightBtn.transform.y = 17;\n        rightBtn.parent = arrGroup;\n\n        let leftBtn = ecs.Entity.create().addComponent(leaf.Bitmap);\n        leftBtn.texture = leaf.RectTexture.getTexture(leaf.RectTexture.formatColors(\n            `${0xffffff},${0xaa0000}\\n` +\n            '...0...\\n' +\n            '..0....\\n' +\n            '.00....\\n' +\n            '0000000\\n' +\n            '.00....\\n' +\n            '..0....\\n' +\n            '...0...\\n'\n        ));\n        leftBtn.transform.x = 0;\n        leftBtn.transform.y = 10;\n        leftBtn.parent = arrGroup;\n\n\n        let downBtn = ecs.Entity.create().addComponent(leaf.Bitmap);\n        downBtn.texture = leaf.RectTexture.getTexture(leaf.RectTexture.formatColors(\n            `${0xffffff},${0xaa0000}\\n` +\n            '...0...\\n' +\n            '..000..\\n' +\n            '.00000.\\n' +\n            '0..0..0\\n' +\n            '...0...\\n' +\n            '...0...\\n' +\n            '...0...'\n        ));\n        downBtn.transform.angle = Math.PI * 180 / 180;\n        downBtn.transform.x = 16;\n        downBtn.transform.y = 26;\n        downBtn.parent = arrGroup;\n\n        let rect = ecs.Entity.create().addComponent(leaf.Bitmap);\n        rect.texture = leaf.PointTexture.getTexture(0xff0000);\n        rect.transform.scaleX = rect.transform.scaleY = 33;\n        rect.parent = arrGroup;\n        rect.transform.x = -4;\n        rect.transform.alpha = 0;\n        rect.transform.y = -4;\n        rect.addComponent(leaf.TouchComponent).onTouchStart.on(e => {\n            let rot = Math.atan2(e.localY - 0.5, e.localX - 0.5) * 180 / Math.PI;\n            leftBtn.transform.alpha = rightBtn.transform.alpha\n                = upBtn.transform.alpha = downBtn.transform.alpha = 1;\n            if (rot <= 45 && rot >= -45) {\n                rightBtn.transform.alpha = 0.5;\n            } else if (rot >= -135 && rot < -45) {\n                upBtn.transform.alpha = 0.5;\n            } else if (rot >= 45 && rot <= 135) {\n                downBtn.transform.alpha = 0.5;\n            } else {\n                leftBtn.transform.alpha = 0.5;\n            }\n        })\n        rect.getComponent(leaf.TouchComponent).onTouchEnd.on(e => {\n            leftBtn.transform.alpha = rightBtn.transform.alpha\n                = upBtn.transform.alpha = downBtn.transform.alpha = 1;\n            let rot = Math.atan2(e.localY - 0.5, e.localX - 0.5) * 180 / Math.PI;\n            let dir = EMPuzzleMove.RIGHT;\n            if (rot <= 45 && rot >= -45) {\n                dir = EMPuzzleMove.RIGHT;\n            } else if (rot >= -135 && rot < -45) {\n                dir = EMPuzzleMove.UP;\n            } else if (rot >= 45 && rot <= 135) {\n                dir = EMPuzzleMove.DOWN;\n            } else {\n                dir = EMPuzzleMove.LEFT;\n            }\n            this.game.getComponent(PuzzleGameLoop).run(dir);\n            console.error(dir);\n            // console.error(e.localX, e.localY, Math.atan2(e.localY - 0.5, e.localX - 0.5) * 180 / Math.PI);\n        })\n\n        arrGroup.transform.x = 5;\n        arrGroup.transform.y = 0;\n\n        dirGroup.transform.x = 2;\n        dirGroup.transform.y = -5;\n\n        dirGroup.transform.scaleX = dirGroup.transform.scaleY = 1.3;\n\n        let xBtn = ecs.Entity.create().addComponent(leaf.Bitmap);\n        xBtn.texture = leaf.RectTexture.getTexture(leaf.RectTexture.formatColors(\n            `${0xffffff},${0xaa0000}\\n` +\n            '...0...\\n' +\n            '..0.0..\\n' +\n            '.00000.\\n' +\n            '0.....0'\n        ));\n        xBtn.transform.scaleY = 2;\n        xBtn.transform.x = 40;\n        xBtn.transform.y = 10;\n        xBtn.parent = dirGroup;\n\n        let zBtn = ecs.Entity.create().addComponent(leaf.Bitmap);\n        zBtn.texture = leaf.RectTexture.getTexture(leaf.RectTexture.formatColors(\n            `${0xffffff},${0xaa0000}\\n` +\n            '000....\\n' +\n            '0..0...\\n' +\n            '0000...\\n' +\n            '0..0...\\n' +\n            '000....\\n'\n        ));\n        zBtn.transform.scaleY = 1.6;\n        zBtn.transform.x = 55;\n        zBtn.transform.y = 10;\n        zBtn.parent = dirGroup;\n        leftBtn.entity.name = 'h';\n\n        this.entity.name = 'w';\n\n        this.uiRoot.transform.y = leaf.getStageHeight() - 100;\n\n        this.uiRoot.transform.scaleX = this.uiRoot.transform.scaleY = 3;\n\n        // this.addClick(upBtn, () => {\n        //     this.game.getComponent(PuzzleGameLoop).run(EMPuzzleMove.UP);\n        // })\n        // this.addClick(downBtn, () => {\n        //     this.game.getComponent(PuzzleGameLoop).run(EMPuzzleMove.DOWN);\n        // })\n        // this.addClick(leftBtn, () => {\n        //     this.game.getComponent(PuzzleGameLoop).run(EMPuzzleMove.LEFT);\n        // })\n        // this.addClick(rightBtn, () => {\n        //     this.game.getComponent(PuzzleGameLoop).run(EMPuzzleMove.RIGHT);\n        // })\n        this.addClick(xBtn, () => {\n            this.game.getComponent(PuzzleGameLoop).back();\n        })\n        this.addClick(zBtn, () => {\n            this.game.getComponent(PuzzleGame).reload();\n        })\n    }\n\n    addClick(btn: leaf.Bitmap, call: Function) {\n        btn.addComponent(leaf.TouchComponent).onTouchStart.on(() => {\n            btn.transform.alpha = 0.8;\n        })\n        btn.getComponent(leaf.TouchComponent).onTouchEnd.on(() => {\n            btn.transform.alpha = 1;\n            call && call();\n        })\n    }\n\n}","import { PuzzleGameConfig, PuzzleGameLevelConfig } from \"../config/puzzle-game-config\";\nimport { PuzzleGameLevel } from \"./puzzle-game-level\";\nimport { PuzzleGameKeyBoard } from \"./puzzle-game-keyboard\";\nimport { PuzzleGameUI } from \"./puzzle-game-ui\";\n\norange.autoloadLink(\"PuzzleScene\");\n\nexport class PuzzleGame extends ecs.Component {\n\n    config: PuzzleGameConfig;\n    level: number;\n    gameName: string;\n\n    withUI: boolean;\n    scaleToStage: boolean;\n    maxWidth: number;\n    maxHeight: number;\n\n\n    lvLabel: leaf.Label;\n    ui: ecs.Entity;\n\n    init(name: string = 'game1-1_txt', level = 1, withUI: boolean = true, scaleToStage: boolean = true, maxWidth: number = 0, maxHeight = 0) {\n        this.gameName = name;\n        this.level = level;\n        this.withUI = withUI;\n        this.scaleToStage = scaleToStage;\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n\n        leaf.StateWin.show();\n    }\n\n    awake() {\n        PuzzleGameConfig.loadGameConfig(this.gameName, (cfg) => {\n            this.config = cfg;\n            this.createLevel(this.level);\n\n            if(this.withUI) {\n                let label = this.lvLabel = ecs.Entity.create().addComponent(leaf.Label);\n                label.text = `第${this.level}关`;\n                label.fontSize = 14;\n                label.transform.x = (leaf.getStageWidth() - label.textWidth) / 2;\n                label.transform.y = 40;\n                label.parent = this.entity.parent;\n            }\n        })\n    }\n\n    reload() {\n        let p = this.entity.parent;\n        this.ui.destroy();\n        this.lvLabel.entity.destroy();\n        this.entity.destroy();\n        ecs.Entity.create().addComponent(PuzzleGame, this.gameName, this.level,\n            this.withUI, this.scaleToStage, this.maxWidth, this.maxHeight).parent = p;\n    }\n\n    loadNextStage() {\n        let p = this.entity.parent;\n        this.ui.destroy();\n        this.lvLabel.entity.destroy();\n        this.entity.destroy();\n        ecs.Entity.create().addComponent(PuzzleGame, this.gameName, Math.min(this.config.levels.length, this.level + 1),\n            this.withUI, this.scaleToStage, this.maxWidth, this.maxHeight).parent = p;\n    }\n\n    private createLevel(level: number = 1) {\n        this.level = level;\n        if (!this.config) return;\n        let cfg: PuzzleGameLevelConfig;\n        if (level === 0) {\n            cfg = this.config.face;\n        }\n        if (!cfg) {\n            cfg = this.config.levels[this.level - 1];\n        }\n        if (!cfg) return;\n        this.addComponent(PuzzleGameLevel, cfg);\n        this.addComponent(PuzzleGameKeyBoard);\n        this.ui = ecs.Entity.create();\n        this.ui.parent = this.entity.parent;\n        if (this.withUI) this.ui.addComponent(PuzzleGameUI, this);\n    }\n\n    onDestroy() {\n        this.ui && this.ui.destroy();\n        this.lvLabel && this.lvLabel.entity && this.lvLabel.entity.destroy();\n    }\n\n}","import { PuzzleGameLevel } from \"../component/puzzle-game-level\";\n\norange.autoloadLink(\"PuzzleScene\");\n\nexport class PuzzleGameConfig {\n\n    blockWidth = 0;\n    blockHeight = 0;\n    objects: { [index: string]: PuzzleGameObjectConfig } = {};\n    legends: { [index: string]: PuzzleGameObjectConfig[] } = {};\n    groups: { [index: string]: PuzzleGameObjectConfig[] } = {};\n    ruleObjects: PuzzleGameObjectConfig[] = [];\n    maxLayer: number = 0;\n    rules: PuzzleRule[] = [];\n    winConditions: PuzzleCondition[] = [];\n    levels: PuzzleGameLevelConfig[] = [];\n    messages: string[][] = [];\n    face: PuzzleGameLevelConfig;\n    ruleLayers: { [index: number]: boolean } = {};\n\n    constructor(txt: string) {\n        txt = txt.toLocaleLowerCase();\n        txt = this.mergeSpace(txt);\n        // while (txt.indexOf('(') != -1) {\n        //     let toIndex = txt.indexOf(')', txt.indexOf('('));\n        //     if (toIndex === -1) break;\n        //     txt = txt.slice(0, txt.indexOf('(')) + txt.slice(txt.indexOf(')', txt.indexOf('(')) + 1, txt.length);\n        // }\n        let lines = txt.split(\"\\n\");\n        for (let i = 0; i < lines.length; i++) {\n            let line = lines[i];\n            let isDevice = this.isBlockDevice(line);\n            if (isDevice) {\n                i++;\n                let name = lines[i];\n                if (name === EMPuzzleGameModel.OBJECTS) i = this.parseObjects(lines, i + 2);\n                if (name === EMPuzzleGameModel.LEGEND) i = this.parseLegend(lines, i + 2);\n                if (name === EMPuzzleGameModel.COLLISIONLAYERS) i = this.parseCollisionLayers(lines, i + 2);\n                if (name === EMPuzzleGameModel.RULES) i = this.parseRules(lines, i + 2);\n                if (name === EMPuzzleGameModel.WINCONDITIONS) i = this.parseWinConditions(lines, i + 2);\n                if (name === EMPuzzleGameModel.LEVELS) i = this.parseLevels(lines, i + 2);\n                if (name === EMPuzzleGameModel.FACE) i = this.parseFace(lines, i + 2);\n                for (let name in this.objects) this.objects[name].game = this;\n            }\n        }\n        let index = 0;\n        for (let name in this.objects) {\n            this.objects[name].id = index++;\n            if (this.groups[EMPuzzleConst.PLAYER].indexOf(this.objects[name]) != -1) {\n                this.objects[name].isPlayer = true;\n            }\n            if (this.blockWidth < this.objects[name].width) this.blockWidth = this.objects[name].width;\n            if (this.blockHeight < this.objects[name].height) this.blockHeight = this.objects[name].height;\n        }\n        for (let name in this.objects) {\n            let obj = this.objects[name];\n            if (!obj.blocks.length || !obj.blocks[0].length) {\n                for (let y = 0; y < this.blockHeight; y++) {\n                    obj.blocks[y] = [];\n                    for (let x = 0; x < this.blockWidth; x++) {\n                        obj.blocks[y][x] = obj.colors[0];\n                    }\n                }\n            }\n        }\n        for (let obj of this.ruleObjects) {\n            this.ruleLayers[obj.layer] = true;\n        }\n        for (let level of this.levels) {\n            if (false) {\n                if (level.width > level.height) {\n                    level.layers.forEach((layer, index) => {\n                        let blocks = [];\n                        for (let y = 0; y < level.width; y++) {\n                            blocks[y] = []\n                            for (let x = 0; x < level.height; x++) {\n                                if (layer[x]) {\n                                    blocks[y][x] = layer[x][y];\n                                }\n                            }\n                        }\n                        level.layers[index] = blocks;\n                    })\n                    let w = level.width;\n                    level.width = level.height;\n                    level.height = w;\n                } else {\n                    level.layers.forEach((layer, index) => {\n                        let blocks = [];\n                        for (let y = 0; y < level.height; y++) {\n                            blocks[y] = []\n                            for (let x = 0; x < level.width; x++) {\n                                if (layer[y]) {\n                                    blocks[y][x] = layer[y][level.width - 1 - x];\n                                }\n                            }\n                        }\n                        level.layers[index] = blocks;\n                    })\n                }\n            }\n            level.blocks = [];\n            for (let y = 0; y < level.height; y++) {\n                level.blocks[y] = [];\n                for (let x = 0; x < level.width; x++) {\n                    level.blocks[y][x] = null;\n                }\n            }\n        }\n    }\n\n    parseFace(lines: string[], index: number): number {\n        let level: PuzzleGameLevelConfig;\n        let y = 0;\n        for (let i = index; i < lines.length; i++) {\n            let line = lines[i];\n            if (this.isBlockDevice(line)) {\n                if (level) {\n                    this.levels.push(level);\n                }\n                console.error(this.levels);\n                return i - 1;\n            }\n            line = this.deleteSpace(line);\n            if (line.length) {\n                if (!level) {\n                    level = new PuzzleGameLevelConfig();\n                    level.game = this;\n                    level.width = 0;\n                    level.height = 0;\n                }\n                for (let i = 0; i < line.length; i++) {\n                    let c = line.charAt(i);\n                    if (i >= level.width) level.width = i + 1;\n                    if (!this.legends[c]) {\n                        console.error(`parse level error, no legend:`, c, 'layer:', line);\n                    }\n                    let x = i;\n                    for (let obj of this.legends[c]) {\n                        if (!level.layerObjects[obj.layer]) level.layerObjects[obj.layer] = [];\n                        if (level.layerObjects[obj.layer].indexOf(obj) === -1) level.layerObjects[obj.layer].push(obj);\n                        if (!level.layers[obj.layer]) level.layers[obj.layer] = [];\n                        if (!level.layers[obj.layer][y]) level.layers[obj.layer][y] = [];\n                        level.layers[obj.layer][y][x] = obj;\n                    }\n                }\n                level.height++;\n                y++;\n            } else {\n                if (level) {\n                    this.face = level;\n                }\n                level = null;\n            }\n        }\n        if (level) {\n            this.face = level;\n        }\n        return lines.length;\n    }\n\n    parseLevels(lines: string[], index: number): number {\n        let level: PuzzleGameLevelConfig;\n        let y = 0;\n        for (let i = index; i < lines.length; i++) {\n            let line = lines[i];\n            if (line.slice(0, 'message '.length) === 'message ') {\n                if (!this.messages[this.levels.length]) {\n                    this.messages[this.levels.length] = [];\n                }\n                this.messages[this.levels.length].push(line.slice('message '.length, line.length));\n                continue;\n            }\n            if (this.isBlockDevice(line)) {\n                if (level) {\n                    this.levels.push(level);\n                }\n                // console.error(this.levels);\n                return i - 1;\n            }\n            line = this.deleteSpace(line);\n            if (line.length) {\n                if (!level) {\n                    level = new PuzzleGameLevelConfig();\n                    level.game = this;\n                    level.width = 0;\n                    level.height = 0;\n                    y = 0;\n                }\n                for (let i = 0; i < line.length; i++) {\n                    let c = line.charAt(i);\n                    if (i >= level.width) level.width = i + 1;\n                    if (!this.legends[c]) {\n                        console.error(`parse level error, no legend:`, c, 'layer:', line);\n                    }\n                    let x = i;\n                    for (let obj of this.legends[c]) {\n                        if (!level.layerObjects[obj.layer]) level.layerObjects[obj.layer] = [];\n                        if (level.layerObjects[obj.layer].indexOf(obj) === -1) level.layerObjects[obj.layer].push(obj);\n                        if (!level.layers[obj.layer]) level.layers[obj.layer] = [];\n                        if (!level.layers[obj.layer][y]) level.layers[obj.layer][y] = [];\n                        level.layers[obj.layer][y][x] = obj;\n                    }\n                }\n                level.height++;\n                y++;\n            } else {\n                if (level) {\n                    this.levels.push(level);\n                }\n                level = null;\n            }\n        }\n        if (level) {\n            this.levels.push(level);\n        }\n        // console.error(this.levels);\n        return lines.length;\n    }\n\n    parseWinConditions(lines: string[], index: number): number {\n        for (let i = index; i < lines.length; i++) {\n            let line = lines[i];\n            if (this.isBlockDevice(line)) {\n                // console.error(this.winConditions);\n                return i - 1;\n            }\n            line = this.mergeSpace(line);\n            line = this.deleteSpaceFrontEnd(line);\n            if (line.length) {\n                let cond = new PuzzleCondition();\n                let strs = line.split(' ');\n                if (strs.length === 4) {\n                    cond.limit = strs[0] as any;\n                    if (!this.groups[strs[1]]) {\n                        console.error('parse win condition error, no object:', strs[1], \" ,line:\", line);\n                    }\n                    cond.master = this.groups[strs[1]];\n                    cond.relation = strs[2] as any;\n                    if (!this.groups[strs[3]]) {\n                        console.error('parse win condition error, no object:', strs[3], \" ,line:\", line);\n                    }\n                    cond.other = this.groups[strs[3]];\n                    for (let c of cond.master) {\n                        if (c && this.ruleObjects.indexOf(c) === -1) this.ruleObjects.push(c);\n                    }\n                    for (let c of cond.other) {\n                        if (c && this.ruleObjects.indexOf(c) === -1) this.ruleObjects.push(c);\n                    }\n                } else if (strs.length === 2) {\n                    cond.limit = strs[0] as any;\n                    if (!this.groups[strs[1]]) {\n                        console.error('parse win condition error, no object:', strs[0], \" ,line:\", line);\n                    }\n                    cond.master = this.groups[strs[0]];\n                    for (let c of cond.master) {\n                        if (c && this.ruleObjects.indexOf(c) === -1) this.ruleObjects.push(c);\n                    }\n                }\n                this.winConditions.push(cond);\n            }\n        }\n    }\n\n    parseRules(lines: string[], index: number): number {\n        for (let i = index; i < lines.length; i++) {\n            let line = lines[i];\n            if (this.isBlockDevice(line)) {\n                // console.error(this.rules);\n                return i - 1;\n            }\n            if (i === index && !this.rules.length) {\n                i--;\n                line = '[moving player] -> [moving player]';\n            }\n            //[ >  Player | Crate ] -> [  >  Player | > Crate  ]\n            //1. -> 分割前后\n            //2. [] 分为一组\n            //3. 第一个分组的第一个力为初始力\n            //4. 每个分组由 | 分割为部分\n            //5. 每个部分由 \"力 对象\" 的格式组成\n            // force: EMPuzzleKey;\n            // ranks: PuzzleGameObjectConfig[][];\n            // toRanks: PuzzleGameObjectConfig[][];\n            // toForces: EMPuzzleForce[][];\n            if (line.indexOf(\"->\") != -1) {\n                let rule = new PuzzleRule();\n                rule.source = line;\n                rule.ranks = [];\n                rule.toRanks = [];\n                rule.toForces = [];\n                rule.limits = [];\n                rule.toLimits = [];\n                // line = this.deleteSpace(line);\n                let befores = line.split(\"->\")[0];\n                let ends = line.split(\"->\")[1];\n\n                //解析前面的限定词\n                let lets = line.split(\"[\")[0];\n                lets = this.deleteSpaceFrontEnd(lets);\n                if (lets.length) {\n                    let words = lets.split(\" \");\n                    for (let word of words) {\n                        if (puzzleDirections.indexOf(word) != -1) {\n                            rule.directions = puzzleDirection[word];\n                        }\n                    }\n                }\n                //解析前半部分\n                let rules = befores.match(/\\[[a-zA-Z0-9><\\| \\t]+\\]/g)\n                if (!rules) {\n                    console.error(\"parse error rule:\", line);\n                }\n                for (let str of rules) {\n                    let rank = [];\n                    let limit = [];\n                    rule.ranks.push(rank);\n                    rule.limits.push(limit);\n                    str = str.slice(1, str.length - 1);\n                    let legends = str.split(\"|\");\n                    for (let legend of legends) {\n                        let limit2 = [];\n                        let isFirst = legends.indexOf(legend) === 0;\n                        legend = this.deleteSpaceFrontEnd(this.mergeSpace(legend));\n                        if (legend === '...') {\n                            rank.push(null);\n                        } else {\n                            let rank2 = [];\n                            limit.push(limit2);\n                            rank.push(rank2);\n                            if (!legend) {\n                                continue;\n                            }\n                            let strs = legend.split(' ');\n                            if (puzzleForces.indexOf(strs[0]) != -1) {\n                                rule.force = strs[0] as any;\n                                strs.shift();\n                            }\n                            let index = 0;\n                            for (let subStr of strs) {\n                                if (puzzleConditionLimits.indexOf(subStr) != -1) {\n                                    limit2[index] = subStr;\n                                } else {\n                                    if (!this.groups[subStr]) {\n                                        console.error(\"parse error rule, no object:\", subStr, '\\n', line);\n                                    }\n                                    for (let objCfg of this.groups[subStr]) {\n                                        if (objCfg && this.ruleObjects.indexOf(objCfg) === -1) {\n                                            this.ruleObjects.push(objCfg);\n                                        }\n                                    }\n                                    limit2[index] = limit2[index] || null;\n                                    rank2[index++] = this.groups[subStr];\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!rule.force) rule.force = EMPuzzleForce.NONE;\n                if (rule.force != EMPuzzleForce.NONE && !(rule.ranks[0]\n                    && rule.ranks[0][0] && rule.ranks[0][0][0]\n                    && this.groups[EMPuzzleConst.PLAYER].indexOf(rule.ranks[0][0][0][0]) != -1)) {\n                    continue;\n                }\n                if (rule.force != EMPuzzleForce.NONE) {\n                    rule.isPlayerMoved = true;\n                }\n                rules = ends.match(/\\[[a-zA-Z0-9><\\| \\t]+\\]/g)\n                rule.index = this.rules.length;\n                this.rules.push(rule);\n                for (let str of rules) {\n                    let toRank = [];\n                    let toForce = [];\n                    let toLimit = [];\n                    rule.toRanks.push(toRank);\n                    rule.toForces.push(toForce);\n                    rule.toLimits.push(toLimit);\n\n                    str = str.slice(1, str.length - 1);\n                    let legends = str.split(\"|\");\n                    for (let legend of legends) {\n                        let froceIndex = 0;\n                        let toRank2 = [];\n                        let toLimit2 = [];\n                        let toForce2 = [];\n                        toRank.push(toRank2);\n                        toLimit.push(toLimit2);\n                        toForce.push(toForce2);\n                        if (!legend) {\n                            continue;\n                        }\n                        legend = this.deleteSpaceFrontEnd(this.mergeSpace(legend));\n                        let strs = legend.split(' ');\n                        let index = 0;\n                        for (let str of strs) {\n                            if (legend === '...') {\n                                toForce2[froceIndex] = null;\n                                toLimit2[index] = null;\n                                toRank2[index++] = null;\n                            } else if (puzzleForces.indexOf(str) != -1) {\n                                toForce2[froceIndex] = str;\n                            } else if (puzzleConditionLimits.indexOf(str) != -1) {\n                                toLimit2[index] = str;\n                            } else {\n                                if (!str) {\n                                    toLimit2[index] = toLimit2[index] || null;\n                                    toRank2[index++] = null;\n                                } else {\n                                    if (!this.groups[str]) {\n                                        console.error(\"parse error rule, no object:\", legend, '\\n', line);\n                                    }\n                                    for (let objCfg of this.groups[str]) {\n                                        if (objCfg && this.ruleObjects.indexOf(objCfg) === -1) {\n                                            this.ruleObjects.push(objCfg);\n                                        }\n                                    }\n                                    toLimit2[index] = toLimit2[index] || null;\n                                    toRank2[index++] = this.groups[str];\n                                }\n                            }\n                        }\n                    }\n                }\n                //解析后半部分\n                // if (rank.length) {\n                //     if (rank.length != toRank.length || rank.length != force.length) {\n                //         console.error(\"parse error rule, length no equals:\", line);\n                //     }\n                // }\n            }\n        }\n        this.rules.sort((a, b) => a.ranks.length - b.ranks.length);\n        return lines.length;\n    }\n\n    parseCollisionLayers(lines: string[], index: number): number {\n        for (let i = index; i < lines.length; i++) {\n            let line = lines[i];\n            if (this.isBlockDevice(line)) {\n                return i - 1;\n            }\n            line = this.deleteSpace(line);\n            if (line.length) {\n                let names = line.split(\",\");\n                for (let name of names) {\n                    name = this.deleteSpace(name);\n                    for (let obj of this.groups[name]) {\n                        obj.layer = this.maxLayer;\n                    }\n                }\n                this.maxLayer++;\n            }\n        }\n        return lines.length;\n    }\n\n    parseLegend(lines: string[], index: number): number {\n        for (let i = index; i < lines.length; i++) {\n            let line = lines[i];\n            if (this.isBlockDevice(line)) {\n                // console.error(this.legends);\n                return i - 1;\n            }\n            if (line.indexOf(\"=\") != -1) {\n                let legend = line.split(\"=\")[0];\n                let name = line.split(\"=\")[1];\n                name = this.deleteSpace(name);\n                legend = this.deleteSpace(legend);\n                if (legend.length === 1) {\n                    this.legends[legend] = [];\n                    let names = name.split(\"and\");\n                    for (let n of names) {\n                        n = this.deleteSpace(n);\n                        this.legends[legend].push(this.objects[n]);\n                    }\n                } else {\n                    this.groups[legend] = [];\n                    let names = name.split(\"or\");\n                    for (let n of names) {\n                        this.groups[legend].push(this.objects[n]);\n                    }\n                }\n            }\n        }\n        return lines.length;\n    }\n\n    parseObjects(lines: string[], index: number): number {\n        for (let i = index; i < lines.length; i++) {\n            let line = lines[i];\n            if (this.isBlockDevice(line)) {\n                // console.error(this.objects);\n                return i - 1;\n            }\n            let name = line.match(/[a-zA-Z0-9]+/) && line.match(/[a-zA-Z0-9]+/).length ? line.match(/[a-zA-Z0-9]+/)[0] : \"\";\n            if (name && name.length) {\n                let obj = new PuzzleGameObjectConfig();\n                obj.name = name;\n                obj.colors = {};\n                obj.blocks = [];\n                obj.width = 0;\n                obj.height = 0;\n                i++;\n                let colorTexts = lines[i++].match(/[#0-9a-zA-Z]+/g);\n                let colorSum = '';\n                for (let c = 0; c < colorTexts.length; c++) {\n                    let cstr = colorTexts[c];\n                    let nums = { 0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, a: 10, A: 10, b: 11, B: 11, c: 12, C: 12, d: 13, D: 13, e: 14, E: 14, f: 15, F: 15 }\n                    if (cstr.charAt(0) == '#') {\n                        obj.colors[c + ''] = 0;\n                        for (let i = 0; i < cstr.length - 1; i++) {\n                            let char = cstr.charAt(cstr.length - 1 - i);\n                            obj.colors[c + ''] += (nums[char]) * Math.pow(16, i);\n                        }\n                    } else {\n                        obj.colors[c + ''] = colorDefines[colorTexts[c].toUpperCase()];\n                    }\n                }\n                for (; i < lines.length; i++) {\n                    if (!lines[i].match(/[0-9\\.]+/)) {\n                        break;\n                    }\n                    let lineBlock = [];\n                    for (let c = 0; c < lines[i].length; c++) {\n                        lineBlock.push(obj.colors[lines[i][c]]);\n                        colorSum += (obj.colors[lines[i][c]] || '0') + \"_\";\n                    }\n                    colorSum += \"|\"\n                    obj.colorId = colorSum;\n                    obj.blocks.push(lineBlock);\n                    obj.width = lineBlock.length;\n                }\n                i--;\n                obj.height = obj.blocks.length;\n                this.objects[obj.name] = obj;\n                this.groups[obj.name] = [obj];\n            }\n        }\n        return lines.length;\n    }\n\n    isBlockDevice(line: string) {\n        return line.length && line.match(/=/g) && line.match(/=/g).length === line.length;\n    }\n\n    deleteSpace(line: string): string {\n        while (line.indexOf(\" \") != -1) {\n            line = line.replace(\" \", \"\");\n        }\n        while (line.indexOf(\"\\t\") != -1) {\n            line = line.replace(\"\\t\", \"\");\n        }\n        while (line.indexOf(\"\\n\") != -1) {\n            line = line.replace(\"\\n\", \"\");\n        }\n        while (line.indexOf(\"\\r\") != -1) {\n            line = line.replace(\"\\r\", \"\");\n        }\n        return line;\n    }\n\n    mergeSpace(line: string): string {\n        return line.replace(/[ \\t]+/g, ' ');\n    }\n\n    deleteSpaceFrontEnd(line: string): string {\n        let start = 0;\n        for (; start < line.length; start++) {\n            if (line.charAt(start) != ' ' && line.charAt(start) != '\\t'\n                && line.charAt(start) != '\\n' && line.charAt(start) != '\\r') break;\n        }\n        let end = line.length - 1;\n        for (; end >= 0; end--) {\n            if (line.charAt(end) != ' ' && line.charAt(end) != '\\t'\n                && line.charAt(start) != '\\n' && line.charAt(start) != '\\r') break;\n        }\n        return line.slice(start, end + 1);\n    }\n\n    static map: { [index: string]: PuzzleGameConfig } = {};\n\n    static getGameConfig(name: string, txt?: string) {\n        if (this.map[name]) return this.map[name];\n        return this.map[name] = new PuzzleGameConfig(txt);\n    }\n\n    static loadGameConfig(name: string, call?: (cfg: PuzzleGameConfig) => any) {\n        leaf.Res.getRes(name) &&\n            leaf.Res.getRes(name).load().then(r => {\n                try {\n                    let cfg = this.getGameConfig(name, r.data as string);\n                    call && call(cfg);\n                } catch (e) {\n                    console.error('parse puzzle error:\\n', r.data);\n                    console.error(e);\n                }\n            });\n    }\n}\n\nexport class PuzzleGameLevelConfig {\n\n    get level(): number {\n        return this.game && this.game.levels.indexOf(this) + 1 || 0;\n    }\n\n    game: PuzzleGameConfig;\n\n    width: number;\n\n    height: number;\n\n    layers: PuzzleGameObjectConfig[][][] = [];\n\n    layerObjects: PuzzleGameObjectConfig[][] = [];\n\n    blocks: any[][];\n}\n\nexport enum EMPuzzleKey {\n    UP = 'up',\n    DOWN = 'down',\n    LEFT = 'left',\n    RIGHT = 'right',\n    A = 'z',\n    B = 'x'\n}\n\nexport enum EMPuzzleDirection {\n    UP = 'up',\n    DOWN = 'down',\n    LEFT = 'left',\n    RIGHT = 'right',\n}\n\nexport var puzzleDirection = {\n    up: ['up'],\n    left: ['left'],\n    right: ['right'],\n    down: ['down'],\n    horizontal: ['left', 'right'],\n    vertical: ['up', 'down'],\n}\n\nexport var puzzleDirections = ['up', 'left', 'right', 'down', 'horizontal', 'vertical'];\n\nexport enum EMPuzzleConst {\n    PLAYER = 'player',\n    BACKGROUND = 'background'\n}\n\nexport enum EMPuzzleMove {\n    NONE = 'none',\n    UP = 'up',\n    DOWN = 'down',\n    LEFT = 'left',\n    RIGHT = 'right'\n}\n\nexport enum EMPuzzleForce {\n    PUSH = '>',\n    PULL = '<',\n    UP = 'up',\n    DOWN = 'down',\n    LEFT = 'left',\n    RIGHT = 'right',\n    MOVING = 'moving',\n    NONE = 'none'\n}\n\nexport var puzzleForces: string[] = ['>', '<', 'up', 'down', 'left', 'right', 'moving'];\n\nexport enum EMPuzzleGameModel {\n    OBJECTS = 'objects',\n    LEGEND = 'legend',\n    SOUNDS = 'sounds',\n    COLLISIONLAYERS = 'collisionlayers',\n    RULES = 'rules',\n    WINCONDITIONS = 'winconditions',\n    LEVELS = 'levels',\n    FACE = 'face'\n}\n\nexport class PuzzleGameObjectConfig {\n    id: number;\n    name: string;\n    width: number;\n    height: number;\n    colors: { [index: string]: number };\n    colorId: string;\n    blocks: number[][];\n    layer: number = 0;\n    game: PuzzleGameConfig;\n    isPlayer: boolean = false;\n}\n\nexport class PuzzleRule {\n    index: number;\n    force: EMPuzzleForce;\n    ranks: PuzzleGameObjectConfig[][][][];\n    limits: EMPuzzleConditionLimit[][][];\n    toRanks: PuzzleGameObjectConfig[][][][];\n    toLimits: EMPuzzleConditionLimit[][][];\n    toForces: EMPuzzleForce[][][];\n    source: string;\n    directions: EMPuzzleDirection[];\n    isPlayerMoved: boolean; //是否为角色移动的规则，角色移动规则需要从 short cut 中获取角色的位置\n}\n\nexport enum EMPuzzleConditionLimit {\n    NO = 'no',\n    ALL = 'all',\n    SOME = 'some'\n}\n\nexport var puzzleConditionLimits = ['no', 'all', 'some'];\n\nexport enum EMPuzzleConditionRelation {\n    NONE = '',\n    ON = 'on'\n}\n\nexport class PuzzleCondition {\n    limit: EMPuzzleConditionLimit;\n    master: PuzzleGameObjectConfig[];\n    relation: EMPuzzleConditionRelation;\n    other: PuzzleGameObjectConfig[];\n}\n\nvar colorDefines = {\n    \"TRANSPARENT\": 0x777777,\n    \"BLACK\": 0x555555,\n    \"WHITE\": 0xffffff,\n    \"GREY\": 0x9d9d9d,\n    \"DARKGREY\": 0x6d6d6d,\n    \"LIGHTGREY\": 0xc1c1c1,\n    \"GRAY\": 0x9d9d9d,\n    \"DARKGRAY\": 0x6d6d6d,\n    \"LIGHTGRAY\": 0xc1c1c1,\n    \"RED\": 0xbe2633,\n    \"DARKRED\": 0x732930,\n    \"LIGHTRED\": 0xe06f8b,\n    \"BROWN\": 0xa46422,\n    \"DARKBROWN\": 0x493c2b,\n    \"LIGHTBROWN\": 0xeeb62f,\n    \"ORANGE\": 0xeb8931,\n    \"YELLOW\": 0xf7e26b,\n    \"GREEN\": 0x44891a,\n    \"DARKGREEN\": 0x2f484e,\n    \"LIGHTGREEN\": 0xa3ce27,\n    \"BLUE\": 0x31a2f2,\n    \"DARKBLUE\": 0x005784,\n    \"LIGHTBLUE\": 0xb2dcef,\n    \"PURPLE\": 0x580780,\n    \"PINK\": 0xe06f8b\n}\n\nfunction parseColorDefines(txt: string) {\n\n    txt = `\n    .cm-s-midnight span.cm-COLOR-TRANSPARENT {\n        color: #777;\n        font-weight: normal\n    }\n    \n    .cm-s-midnight span.cm-COLOR-BLACK {\n        color: #555\n    }\n    \n    .cm-s-midnight span.cm-COLOR-WHITE {\n        color: #fff\n    }\n    `\n    let lines = txt.split(\"\\n\");\n    let name: string;\n    let colors = {};\n    for (let line of lines) {\n        if (line.indexOf(\"span.cm-COLOR-\") != -1) {\n            name = line.slice(line.indexOf(\"span.cm-COLOR-\") + \"span.cm-COLOR-\".length, line.indexOf(\" {\"));\n            line = lines[lines.indexOf(line) + 1];\n            let color = \"0x\" + line.split(\"#\")[1];\n            if (color.length === 5) {\n                color = \"0x\" + color[2] + color[2] + color[3] + color[3] + color[4] + color[4];\n            }\n            colors[name] = color;\n        }\n    }\n    console.error(JSON.stringify(colors, null, 2));\n}","import { ModuleScene } from \"../../../utils/ui/module-scene\";\nimport { PuzzleScene } from \"../puzzle-scene\";\nimport { GameStorage } from \"../../../utils/storage/game-storage\";\nimport { PuzzleGame } from \"../component/puzzle-game\";\nimport { HPComponent } from \"../../common/hp-component\";\nimport { MazeAlgorithm } from \"../../../utils/algorithm/maze-algorithm\";\n\n@orange.autoload(\"FaceScene\")\nexport class FaceScene extends ModuleScene {\n\n    constructor() {\n        super();\n\n        // //9,17,33\n        // let size = 29\n        // let blocks = MazeAlgorithm.makeSimpleMaze(17, 17);\n        // blocks[0][1] = 2;\n        // blocks[blocks.length - 1][blocks[0].length - 2] = 3;\n        // let print = (blocks) => {\n        //     let str = '\\n';\n        //     for (let y = 0; y < blocks.length; y++) {\n        //         for (let x = 0; x < blocks[y].length; x++) {\n        //             blocks[y][x] = [\".\", \"#\", \"P\", \"O\"][blocks[y][x]] as any;\n        //             str += blocks[y][x];\n        //         }\n        //         str += '\\n';\n        //     }\n        //     console.error(str);\n        // }\n        // print(blocks);\n        // // this.makeLevel();\n        // return\n\n        // let label = ecs.Entity.create().addComponent(leaf.Label);\n        // label.text = '开心游戏合集';\n        // label.fontSize = 10;\n        // label.transform.x = (leaf.getStageWidth() - label.textWidth) / 2;\n        // label.transform.y = 25;\n        // label.parent = this.scene;\n\n        let top = 100;\n        let ui = ecs.Entity.create();\n        ui.parent = this.scene;\n\n        let root = ecs.Entity.create();\n        root.parent = ui;\n        root.transform.y = top;\n\n        let listScroller = ecs.Entity.create();\n        listScroller.parent = root;\n        let bg = ecs.Entity.create().addComponent(leaf.Bitmap);\n        bg.parent = listScroller;\n        bg.texture = leaf.PointTexture.getTexture(0x00ff00);\n        bg.transform.scaleX = leaf.getStageWidth();\n        bg.transform.scaleY = leaf.getStageHeight() - top - 60;\n        bg.transform.alpha = 0;\n\n        let levelList = ecs.Entity.create();\n        levelList.parent = listScroller;\n\n        let mask = ecs.Entity.create().addComponent(leaf.Bitmap);\n        mask.texture = leaf.PointTexture.getTexture(0);\n        mask.parent = ui;\n        mask.transform.scaleX = leaf.getStageWidth();\n        mask.transform.scaleY = top;\n\n        mask = ecs.Entity.create().addComponent(leaf.Bitmap);\n        mask.texture = leaf.PointTexture.getTexture(0);\n        mask.parent = ui;\n        mask.transform.scaleX = leaf.getStageWidth();\n        mask.transform.scaleY = 60;\n        mask.transform.y = leaf.getStageHeight() - mask.transform.scaleY;\n\n        let listHeight = leaf.getStageHeight() - 60 - top;\n\n        let gameList = [\n            'game1-1_txt',\n            'game1-2_txt',\n            'game1-3_txt',\n            'game1-4_txt'\n        ]\n        let nameList = [\n            '经典推箱子',\n            '走迷宫',\n            '初级推箱子',\n            '吃苹果'\n        ]\n\n        for (let i = 0; i < gameList.length; i++) {\n            let levelui = ecs.Entity.create();\n            levelui.parent = levelList;\n            levelui.transform.x = [30, 140][i % 2];\n            levelui.transform.y = 130 * (~~(i / 2));\n\n            let level = ecs.Entity.create().addComponent(PuzzleGame, gameList[i], 0, false, false, 100, 100);\n            level.parent = levelui;\n            let label = ecs.Entity.create().addComponent(leaf.Label);\n            label.text = nameList[i];\n            label.parent = levelui;\n            label.fontSize = 20;\n            level.transform.y = 20;\n            if (window[\"lv\"] == null) window[\"lv\"] = level;\n\n\n            levelui.addComponent(leaf.TouchComponent).onTouchEnd.on(() => {\n                new PuzzleScene(gameList[i]);\n            })\n        }\n\n        let startX = 0;\n        let startY = 0;\n        let levelY = levelList.transform.y;\n        let startScroll = false;\n        listScroller.addComponent(leaf.TouchComponent).onTouchStart.on((e) => {\n            startScroll = false;\n            startX = e.stageX;\n            startY = e.stageY;\n            levelY = levelList.transform.y;\n        })\n        listScroller.getComponent(leaf.TouchComponent).onTouchMove.on((e) => {\n            if (Math.abs(e.stageX - startX) > 10 || Math.abs(e.stageY - startY) > 10) {\n                startScroll = true;\n            }\n            if (startScroll) {\n                levelList.transform.y = levelY - startY + e.stageY;\n                if (levelList.transform.y < listHeight - 130 * (~~(gameList.length / 2))) {\n                    levelList.transform.y = listHeight - 130 * (~~(gameList.length / 2));\n                }\n                if (levelList.transform.y > 0) levelList.transform.y = 0;\n            }\n        })\n        // ui.addComponent(HPComponent);\n    }\n\n    makeLevel() {\n\n\n        let copySearch = function (source: number[][]): number[][] {\n            let copy = [];\n            for (let y = 0; y < h; y++) {\n                copy[y] = [];\n                for (let x = 0; x < w; x++) {\n                    copy[y][x] = source[y][x];\n                }\n            }\n            return copy;\n        }\n\n        console.clear();\n        let w = 25;\n        let h = 25;\n        let grids: number[][] = [];\n        let search: number[][] = [];\n        for (let y = 0; y < h; y++) {\n            search[y] = [];\n            grids[y] = [];\n            for (let x = 0; x < w; x++) {\n                search[y][x] = 0;\n                grids[y][x] = y === 0 || x === 0 || x === w - 1 || y === h - 1 ? 1 : 0;\n            }\n        }\n\n        grids[0][1] = 2;\n        grids[h - 1][w - 2] = 3;\n        let offsets = [[1, 0], [-1, 0], [0, 1], [0, -1]];\n\n        let source = copySearch(grids);\n\n        while (true) {\n            let count = 0;\n            grids = copySearch(source);\n            for (let y = 0; y < h; y++) {\n                let x = ~~(w * Math.random());\n                if (grids[y][x]) {\n                    continue;\n                }\n                let flag = true;\n                if (grids[y + 1][x] || grids[y - 1][x] || grids[y - 1][x - 1] || grids[y - 1][x + 1]\n                    || grids[y + 1][x - 1] || grids[y + 1][x + 1]) {\n                    flag = false;\n                    continue;\n                }\n                if (!flag) continue;\n                grids[y][x] = 1;\n                let addX = Math.random() < 0.5 ? -1 : 1;\n                let cx = x + addX;\n                while (cx >= 1 && cx < w - 1) {\n                    let flag = true;\n                    if (grids[y + 1][cx] || grids[y - 1][cx] || grids[y - 1][cx - 1] || grids[y - 1][cx + 1] ||\n                        grids[y + 1][cx - 1] || grids[y + 1][cx + 1]) {\n                        flag = false;\n                        break;\n                    }\n                    grids[y][cx] = 1;\n                    count++;\n                    cx += addX;\n                    if (!flag) continue;\n                    if (Math.random() < 0.2) continue;\n                }\n            }\n            if (count > w + h) break;\n        }\n\n\n        let count = 0;\n        while (count < h / 2) {\n            for (let y = 0; y < h; y++) {\n                let x = ~~(w * Math.random());\n                if (!grids[y][x] && !grids[y][x - 1] && !grids[y][x + 1] &&\n                    (!grids[y - 1][x] && !grids[y - 1][x - 1] && !grids[y - 1][x + 1]\n                        || !grids[y + 1][x] && !grids[y + 1][x - 1] && !grids[y + 1][x + 1])) {\n                    grids[y][x] = 1;\n                    count++;\n                }\n            }\n        }\n\n\n        let print = (blocks) => {\n            let str = '\\n';\n            for (let y = 0; y < h; y++) {\n                for (let x = 0; x < w; x++) {\n                    str += blocks[y][x];\n                }\n                str += '\\n';\n            }\n            console.error(str);\n        }\n\n        let endX = w - 2;\n        let endY = h - 1;\n        let results: { x: number, y: number }[][] = [];\n        let paths: { x: number, y: number, path: { x: number, y: number }[], search: number[][] }[] =\n            [{ x: 1, y: 0, path: [{ x: 1, y: 0 }], search: search }];\n        while (paths.length && true) {\n            if (results.length >= 1) break;\n            let path = paths.splice(~~(paths.length * Math.random()), 1)[0];\n            // if (path.path.length < (w + h) * 1) continue;\n            path.search[path.y][path.x] = 1;\n            let cks = offsets.concat();\n            while (cks.length) {\n                let offset = cks.splice(~~(Math.random() * cks.length), 1)[0];\n                let x = path.x + offset[0];\n                let y = path.y + offset[1];\n                if (x === endX && y === endY) {\n                    results.push(path.path.concat({ x: x, y: y }));\n                    print(path.search);\n                    console.error(path.path.length);\n                    continue;\n                }\n                if (x < 0 || x >= w || y < 0 || y >= h) continue;\n                if (path.search[y][x]) continue;\n                if (grids[y][x]) continue;\n                let flag = true;\n                for (let co of offsets) {\n                    if (path.search[y + co[1]][x + co[0]] && (x + co[0] != path.x || y + co[1] != path.y)) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if (!flag) continue;\n                let search = copySearch(path.search);\n                search[path.y][path.x] = 1;\n                paths.push({\n                    x: x, y: y, path: path.path.concat([{ x: x, y: y }]),\n                    search\n                })\n            }\n        }\n        for (let i = 0; i < results.length; i++) {\n            for (let j = 0; j < results.length; j++) {\n                if (i === j) continue;\n                if (results[i].length != results[j].length) continue;\n                let flag = true;\n                for (let k = 0; k < results[i].length; k++) {\n                    if (results[i][k].x != results[j][k].x || results[i][k].y != results[j][k].y) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if (flag) {\n                    console.error(\"same ???\", i, j, results[i], results[j]);\n                    return;\n                }\n            }\n        }\n        // console.error(results);\n        grids = copySearch(source);\n        let path = results.pop();\n        path.shift();\n        let indexs = [];\n        for (let p of path) {\n            let ind = p.x + p.y * w;\n            indexs.push(ind);\n        }\n        for (let p of path) {\n            for (let off of offsets) {\n                let x = p.x + off[1];\n                let y = p.y + off[0];\n                if (x < 0 || x >= w || y < 0 || y >= h) continue;\n                let ind = x + y * w;\n                if (indexs.indexOf(ind) != -1) continue;\n                if (!grids[y][x]) grids[y][x] = 1;\n                // console.error(x, y, ind, indexs);\n            }\n        }\n        for (let y = 0; y < h; y++) {\n            for (let x = 0; x < w; x++) {\n                grids[y][x] = [\".\", \"#\", \"P\", \"O\"][grids[y][x]] as any;\n            }\n        }\n        print(grids);\n        // console.error(JSON.stringify(grids, null, 2));\n    }\n\n}","import { ModuleScene } from \"../../utils/ui/module-scene\";\nimport { PuzzleGame } from \"./component/puzzle-game\";\nimport { PuzzleLevelWin } from \"./ui/puzzle-level-win\";\nimport { FaceScene } from \"./face/face-scene\";\n\n@orange.autoload(\"PuzzleScene\")\nexport class PuzzleScene extends ModuleScene {\n\n    constructor(game: string = 'game1-1_txt') {\n        super();\n\n        let child = ecs.Entity.create();\n        child.parent = this.scene;\n\n        ecs.Entity.create().addComponent(PuzzleGame, 'game1-4_txt', 1).parent = child;\n        // ecs.Entity.create().addComponent(PuzzleLevelWin, game).parent = child;\n\n        let zBtn = ecs.Entity.create().addComponent(leaf.Bitmap);\n        zBtn.texture = leaf.RectTexture.getTexture(leaf.RectTexture.formatColors(\n            `${0xffffff},${0xaa0000}\\n` +\n            '0.....0\\n' +\n            '.0...0.\\n' +\n            '..0.0..\\n' +\n            '...0...\\n' +\n            '..0.0..\\n' +\n            '.0...0.\\n' +\n            '0.....0'\n        ));\n        zBtn.transform.y = 15;\n        zBtn.transform.x = 10;\n        zBtn.transform.scaleX = zBtn.transform.scaleY = 3;\n        zBtn.parent = this.scene;\n        zBtn.entity.name = 'z';\n\n        let label = ecs.Entity.create().addComponent(leaf.Label);\n        label.text = '开心合集';\n        label.fontSize = 10;\n        label.transform.x = (leaf.getStageWidth() - label.textWidth) / 2;\n        label.transform.y = 25;\n        label.parent = this.scene;\n\n        this.addClick(zBtn, () => {\n            new FaceScene();\n        })\n    }\n\n    addClick(btn: leaf.Bitmap, call: Function) {\n        btn.addComponent(leaf.TouchComponent).onTouchStart.on(() => {\n            btn.transform.alpha = 0.8;\n        })\n        btn.getComponent(leaf.TouchComponent).onTouchEnd.on(() => {\n            btn.transform.alpha = 1;\n            call && call();\n        })\n    }\n\n}","/**\n * @internal\n */\nvar iswx = false;\n/**\n * @internal\n */\nvar wx = window[\"wx\"];\ntry {\n    if (window[\"wx\"] && window[\"wx\"].getFileSystemManager && window[\"wx\"].getFileSystemManager()[\"stat\"]) {\n        iswx = true;\n    }\n} catch (e) {\n    iswx = false;\n}\n\nif (iswx) {\n    window[\"ofs\"] = (function () {\n        var fs = wx.getFileSystemManager();\n\n        var exist = (path) => {\n            return new Promise((resolve, reject) => {\n                fs.access({\n                    path: getWXPath(path),\n                    success: () => resolve(true),\n                    fail: () => resolve(false)\n                })\n            })\n        }\n\n        var getWXPath = function (path) {\n            return path == '' ? wx.env.USER_DATA_PATH : wx.env.USER_DATA_PATH + '/' + path;\n        }\n\n        this.exist = (path) => {\n            return new Promise((resolve, reject) => {\n                var paths = path.split('/');\n                var str = \"\";\n                var i = -1;\n                var f = () => {\n                    i++;\n                    if (i < paths.length) {\n                        str += paths[i] + (i < paths.length - 1 ? \"/\" : \"\");\n                        if (str.length > 1) {\n                            exist(str).then(exist => {\n                                if (!exist) {\n                                    resolve(false);\n                                } else {\n                                    f();\n                                }\n                            }).catch(e => {\n                                reject(e)\n                            })\n                        } else {\n                            f();\n                        }\n                    } else {\n                        resolve(true);\n                    }\n                }\n                f();\n            })\n        }\n\n        var mkdir = (path) => {\n            return new Promise((resolve, reject) => {\n                fs.mkdir({\n                    dirPath: getWXPath(path),\n                    success: () => resolve(),\n                    fail: () => reject('创建目录出错:' + path)\n                })\n            })\n        }\n\n        this.mkdir = (path) => {\n            return new Promise((resolve, reject) => {\n                var paths = path.split('/');\n                var str = \"\";\n                var i = -1;\n                var f = () => {\n                    i++;\n                    if (i < paths.length) {\n                        str += paths[i] + (i < paths.length - 1 ? \"/\" : \"\");\n                        if (str.length > 1) {\n                            this.exist(str).then(exist => {\n                                if (!exist) {\n                                    mkdir(str).then(() => {\n                                        f();\n                                    }).catch(e => {\n                                        reject(e)\n                                    })\n                                } else {\n                                    f();\n                                }\n                            }).catch(e => {\n                                reject(e)\n                            })\n                        } else {\n                            f();\n                        }\n                    } else {\n                        resolve();\n                    }\n                }\n                f();\n            })\n        }\n\n        this.writeFile = (path, data, encoding) => {\n            encoding = encoding || 'utf8';\n            return new Promise((resolve, reject) => {\n                var dir = path.slice(0, path.length - path.split('/')[path.split('/').length - 1].length - 1);\n                this.mkdir(dir).then(() => {\n                    fs.writeFile({\n                        filePath: getWXPath(path),\n                        data: data,\n                        encoding: encoding,\n                        success: () => resolve(),\n                        fail: () => reject\n                    })\n                }).catch(e => {\n                    reject(e);\n                })\n            })\n        }\n\n        this.readFile = (path, encoding) => {\n            return new Promise((resolve, reject) => {\n                encoding = encoding || 'utf8';\n                this.exist(path).then(exist => {\n                    if (!exist) reject('文件不存在:' + path);\n                    else {\n                        fs.readFile({\n                            filePath: getWXPath(path),\n                            encoding: encoding,\n                            success: data => resolve(data.data),\n                            fail: e => reject(e)\n                        })\n                    }\n                }).catch(e => reject(e))\n            })\n        }\n\n        this.removeFile = (path) => {\n            return new Promise((resolve, reject) => {\n                this.exist(path).then(exist => {\n                    if (!exist) resolve();\n                    else {\n                        fs.unlink({\n                            filePath: getWXPath(path),\n                            success: () => resolve(),\n                            fail: e => reject(e)\n                        })\n                    }\n                }).catch(e => reject(e))\n            })\n        }\n\n        this.join = (dir1, dir2) => {\n            if (dir1.charAt(dir1.length - 1) == '/') dir1 = dir1.slice(0, dir1.length - 1);\n            if (dir2.charAt(0) == '/') dir2 = dir2.slice(1, dir2.length);\n            return dir1 + '/' + dir2;\n        }\n\n        var readDir = (path) => {\n            return new Promise((resolve, reject) => {\n                this.exist(path).then(exist => {\n                    if (!exist) resolve([]);\n                    else {\n                        fs.readdir({\n                            dirPath: getWXPath(path),\n                            success: (res) => {\n                                var files = res.files;\n                                var list = [];\n                                files.forEach(name => list.push(this.join(path, name)));\n                                resolve(list);\n                            },\n                            fail: e => reject(e)\n                        })\n                    }\n                }).catch(e => reject(e))\n            });\n        }\n\n        var isFile = (path) => {\n            return new Promise((resolve, reject) => {\n                fs.stat({\n                    path: getWXPath(path),\n                    success: res => resolve(res.stats.isFile()),\n                    fail: e => reject(e)\n                })\n            });\n        }\n\n\n        this.isFile = (path) => {\n            return new Promise((resolve, reject) => {\n                this.exist(path).then(exist => {\n                    if (!exist) reject('目录(文件)不存在:' + path);\n                    else {\n                        fs.stat({\n                            path: getWXPath(path),\n                            success: res => resolve(res.stats.isFile()),\n                            fail: e => reject(e)\n                        })\n                    }\n                }).catch(e => reject(e))\n            });\n        }\n\n        this.readDir = (path) => {\n            return new Promise((resolve, reject) => {\n                var all = [];\n                var f = (dir) => {\n                    return new Promise((dresolve, dreject) => {\n                        readDir(dir).then(list => {\n                            if (list[\"length\"] == 0) dresolve();\n                            else {\n                                var n = 0;\n                                list[\"forEach\"](url => {\n                                    n++;\n                                    isFile(url).then(\n                                        flag => {\n                                            if (flag) { //是文件\n                                                all.push(url);\n                                                n--;\n                                                if (n === 0) dresolve();\n                                            } else {\n                                                f(url).then(() => {\n                                                    n--;\n                                                    if (n === 0) dresolve();\n                                                }).catch(e => dreject(e));\n                                            }\n                                        }\n                                    ).catch(e => dreject(e));\n                                })\n                            }\n                        }).catch(e => dreject(e))\n                    })\n                }\n                f(path).then(() => resolve(all)).catch(e => reject);\n            });\n        }\n\n        var removeDir = (path) => {\n            return new Promise((resolve, reject) => {\n                fs.rmdir({\n                    dirPath: getWXPath(path),\n                    success: () => resolve(),\n                    fail: e => reject(e)\n                })\n            });\n        }\n\n        this.removeDir = (path) => {\n            return new Promise((resolve, reject) => {\n                var all = [];\n                var f = (dir) => {\n                    return new Promise((dresolve, dreject) => {\n                        readDir(dir).then(list => {\n                            if (list[\"length\"] == 0) dresolve();\n                            else {\n                                var n = 0;\n                                list[\"forEach\"](url => {\n                                    n++;\n                                    this.isFile(url).then(\n                                        flag => {\n                                            if (flag) { //是文件\n                                                this.removeFile(url).then(() => {\n                                                    n--;\n                                                    if (n === 0) {\n                                                        removeDir(dir).then(() => dresolve()).then(e => dreject());\n                                                    }\n                                                }).catch(e => dreject(e));\n                                            } else {\n                                                f(url).then(() => {\n                                                    n--;\n                                                    if (n === 0) {\n                                                        removeDir(dir).then(() => dresolve()).then(e => dreject());\n                                                    }\n                                                }).catch(e => dreject(e));\n                                            }\n                                        }\n                                    ).catch(e => dreject(e));\n                                })\n                            }\n                        }).catch(e => dreject(e))\n                    })\n                }\n                f(path).then(() => resolve(all)).catch(e => reject);\n            });\n        }\n\n        var out: any = {};\n        var list = [];\n        var isCall = false;\n        var _t = this;\n        var callNext = () => {\n            if (isCall) return;\n            else if (list.length) {\n                isCall = true;\n                var item = list.shift();\n                item.call.apply(_t, item.args).then(function () {\n                    isCall = false;\n                    item.resolve.apply(null, arguments);\n                    callNext();\n                }).then(e => {\n                    isCall = false;\n                    item.reject.apply(null, e);\n                    callNext();\n                }).catch(e => {\n                    isCall = false;\n                    item.reject(e);\n                    callNext();\n                });\n            }\n        }\n        var decorate = (f) => {\n            return function () {\n                var args = arguments;\n                return new Promise((resolve, reject) => {\n                    list.push({\n                        call: f,\n                        args: args,\n                        resolve: resolve,\n                        reject: reject\n                    });\n                    callNext();\n                });\n            }\n        };//wx.env.USER_DATA_PATH + '/'\n        out.exist = decorate(this.exist);\n        out.mkdir = decorate(this.mkdir);\n        out.writeFile = decorate(this.writeFile);\n        out.readFile = decorate(this.readFile);\n        out.removeFile = decorate(this.removeFile);\n        out.isFile = decorate(this.isFile);\n        out.readDir = decorate(this.readDir);\n        out.removeDir = decorate(this.removeDir);\n        out.join = this.join;\n        out.setStorages = (type, list) => {\n            return new Promise((resolve, reject) => {\n                if (list.length == 0) {\n                    resolve();\n                } else {\n                    var n = list.length;\n                    list.forEach(item => {\n                        console.warn('存储:' + wx.env.USER_DATA_PATH + '/ofs/storage/' + type + '/' + item.key + '.txt');\n                        out.writeFile('ofs/storage/' + type + '/' + item.key + '.txt', JSON.stringify(item.value)).then(r => {\n                            n--;\n                            console.warn('存储成功');\n                            if (n == 0) resolve();\n                        }).catch(e => {\n                            reject(e);\n                            console.warn('失败', e);\n                        });\n                    })\n                }\n            })\n        }\n        out.setStorage = (type, val) => {\n            return out.setStorages(type, [{ key: type, value: val }]);\n        }\n        out.getStorages = (type) => {\n            return new Promise((resolve, reject) => {\n                out.readDir('ofs/storage/' + type).then(list => {\n                    if (list.length == 0) {\n                        resolve([]);\n                    } else {\n                        var all = [];\n                        var n = list.length;\n                        list.forEach(url => {\n                            var name = url.split('/')[url.split('/').length - 1];\n                            name = name.split('.')[0];\n                            out.readFile(url).then(data => {\n                                all.push({ 'key': name, 'value': JSON.parse(data) });\n                                n--;\n                                if (n == 0) resolve(all);\n                            }).catch(e => resolve([])); //reject(e)\n                        })\n                    }\n                }).catch(e => resolve([])); //reject(e)\n            })\n        }\n        out.getStorage = (type) => {\n            return new Promise((resolve, reject) => {\n                out.readDir('ofs/storage/' + type).then(list => {\n                    if (list.length == 0) {\n                        resolve(null);\n                    } else {\n                        var all = [];\n                        var n = list.length;\n                        list.forEach(url => {\n                            var name = url.split('/')[url.split('/').length - 1];\n                            name = name.split('.')[0];\n                            out.readFile(url).then(data => {\n                                all.push({ 'key': name, 'value': JSON.parse(data) });\n                                n--;\n                                if (n == 0) resolve(all.length ? all[0].value : null);\n                            }).catch(e => resolve(null)); //reject(e)\n                        })\n                    }\n                }).catch(e => resolve(null)); //reject(e)\n            })\n        }\n        out.removeStorage = (type) => {\n            return new Promise((resolve, reject) => {\n                out.removeDir('ofs/storage/' + type).then(() => resolve()).catch(e => reject(e));\n            });\n        }\n        return out;\n\n    }).call(() => { })\n} else {\n    var f: any = {};\n    window[\"ofs\"] = f;\n    f.setStorages = function (type: string, list: { key: string, value: any }[]) {\n        return new Promise<void>(resolve => {\n            try {\n                window.localStorage.setItem(type, JSON.stringify(list));\n            } catch (e) {\n            }\n            resolve();\n        })\n    }\n    f.setStorage = (type, val) => {\n        return f.setStorages(type, [{ key: type, value: val }]);\n    }\n    f.getStorages = function (type: string) {\n        return new Promise<{ key: string, value: any }[]>(resolve => {\n            var items = [];\n            try {\n                items = JSON.parse(window.localStorage.getItem(type));\n            } catch (e) {\n                items = [];\n            }\n            resolve(items);\n        })\n    }\n    f.getStorage = function (type: string) {\n        return new Promise<{ key: string, value: any }[]>(resolve => {\n            var items = [];\n            try {\n                items = JSON.parse(window.localStorage.getItem(type));\n            } catch (e) {\n                items = [];\n            }\n            resolve(items && items.length ? items[0].value : null);\n        })\n    }\n    f.removeStorage = function (type: string) {\n        return new Promise(resolve => {\n            window.localStorage.removeItem(type);\n            resolve();\n        })\n    }\n}\n\n\nexport class File {\n    public static removeFile: (path: string) => Promise<void> = window[\"ofs\"].removeFile || (() => new Promise(resolve => resolve()));\n}\n\nexport class GameStorage {\n    public static setStorages: (key: string, value: { key: string, value: any }[]) => Promise<void> = window[\"ofs\"].setStorage;\n    public static getStorages: (key: string) => Promise<{ key: string, value: any }[]> = window[\"ofs\"].getStorage;\n    public static setStorage: (key: string, value: any) => Promise<void> = window[\"ofs\"].setStorage;\n    public static getStorage: (key: string) => Promise<any> = window[\"ofs\"].getStorage;\n    public static removeStorage: (key: string) => Promise<void> = window[\"ofs\"].removeStorage;\n}\n\n\nwindow[\"GameStorage\"] = GameStorage;","export class ModuleScene {\n\n    scene: ecs.Scene;\n\n    constructor() {\n        this.scene = new ecs.Scene();\n        leaf.world.scene = this.scene;\n    }\n\n    close() {\n        if (this.scene) {\n            if (this.scene.world) {\n                this.scene.world.scene = null;\n            }\n            this.scene.destroy();\n            this.scene = null;\n        }\n    }\n\n}"],"sourceRoot":""}